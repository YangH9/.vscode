"use strict";var D=Object.defineProperty;var Lt=Object.getOwnPropertyDescriptor;var Ut=Object.getOwnPropertyNames;var kt=Object.prototype.hasOwnProperty;var At=(e,t)=>{for(var i in t)D(e,i,{get:t[i],enumerable:!0})},Ft=(e,t,i,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Ut(t))!kt.call(e,r)&&r!==i&&D(e,r,{get:()=>t[r],enumerable:!(o=Lt(t,r))||o.enumerable});return e};var Mt=e=>Ft(D({},"__esModule",{value:!0}),e);var ee={};At(ee,{activate:()=>te});module.exports=Mt(ee);var Pt=require("vscode");var m=require("vscode");var u=e=>(e==null?void 0:e.document.uri.scheme)==="file";var H=require("vscode"),a=e=>H.workspace.getConfiguration("gitblame").get(e);var j=require("vscode"),Dt=1e3,V=60*Dt,_=60*V,K=24*_,q=365.25*K,Bt=q/12,Ot=[["year",q],["month",Bt],["day",K],["hour",_],["minute",V]],B=(e,t)=>{let i=e.valueOf()-t.valueOf();for(let[o,r]of Ot)if(i>r)return new Intl.RelativeTimeFormat(j.env.language).format(-1*Math.round(i/r),o);return"right now"};var T=({author:e,committer:t,hash:i,summary:o})=>{let r=new Date,n=({date:M})=>M.toISOString().slice(0,10),l=B(r,e.date),x=B(r,t.date),y=(M,It)=>(Et="")=>M.substr(0,parseInt(Et||It,10));return{"author.mail":e.mail,"author.name":e.name,"author.timestamp":e.timestamp,"author.tz":e.tz,"author.date":n(e),"committer.mail":t.mail,"committer.name":t.name,"committer.timestamp":t.timestamp,"committer.tz":t.tz,"committer.date":n(t),"commit.hash":y(i,"40"),"commit.hash_short":y(i,"7"),"commit.summary":y(o,"65536"),"time.ago":l,"time.c_ago":x}};var Rt=(e,t,i)=>o=>{let r=e.indexOf(o,t);return r===-1||r>i?i:r},St=(e,t)=>(i,o)=>o===i||t===i?"":e.substring(i+1,o);function Wt(e,t,i){let o=t.indexOf("}",i),r=Rt(t,i,o),n=St(t,o),l=r(","),x=r("|"),y=t.substring(i,Math.min(l,x));return[e[y]??y,n(x,o),n(l,x)]}function*$t(e,t){let i=0,o=0,r=0;for(let n=0;n<e.length;n++)if(r===0&&e[n]==="$")r=2;else if(r===2&&e[n]==="{")r=1,o=n-1,yield[e.slice(i,o)],i=o;else if(r===2)r=0;else if(r===1){r=0;let l=e.indexOf("}",n);if(l===-1)break;yield Wt(t,e,n),i=l+1}yield[e.slice(i)]}var Y=(e,t="")=>t==="u"?e.toUpperCase():t==="l"?e.toLowerCase():t?`${e}|${t}`:e,Gt=e=>e.replace(/\u202e/g,""),v=(e,t)=>{let i="";for(let[o,r,n]of $t(e,t))typeof o=="string"?i+=Y(o,r):i+=Y(o(n),r);return Gt(i)},X=e=>v(a("statusBarMessageFormat"),T(e)),Z=e=>v(a("inlineMessageFormat"),T(e));var c=require("vscode");function d(e){return/^0{40}$/.test(e.hash)}var J=require("vscode"),p=()=>J.window.activeTextEditor,O="N:-1",R=({document:e,selection:t})=>e.uri.scheme!=="file"?O:`${e.fileName}:${t.active.line}`;var w=class{constructor(){this.decorationType=c.window.createTextEditorDecorationType({}),this.statusBar=this.createStatusBarItem(),c.workspace.onDidChangeConfiguration(t=>{t.affectsConfiguration("gitblame")&&this.createStatusBarItem()})}createStatusBarItem(){this.statusBar&&this.statusBar.dispose();let t=c.window.createStatusBarItem(c.StatusBarAlignment.Right,a("statusBarPositionPriority"));return t.show(),t}createLineDecoration(t,i){var n;if(!a("inlineMessageEnabled"))return;let o=a("inlineMessageMargin"),r=new c.Position(i.selection.active.line,Number.MAX_SAFE_INTEGER);this.removeLineDecoration(),(n=i.setDecorations)==null||n.call(i,this.decorationType,[{renderOptions:{after:{contentText:t,margin:`0 0 0 ${o}rem`,color:new c.ThemeColor("editorCodeLens.foreground")}},range:new c.Range(r,r)}])}removeLineDecoration(){var i;let t=p();(i=t==null?void 0:t.setDecorations)==null||i.call(t,this.decorationType,[])}set(t,i){t?d(t)?(this.text(a("statusBarMessageNoCommit"),!1),i&&this.createLineDecoration(a("inlineMessageNoCommit"),i)):(this.text(X(t),!0),i&&this.createLineDecoration(Z(t),i)):this.clear()}clear(){this.text("",!1),this.removeLineDecoration()}activity(){this.text("$(sync~spin) Waiting for git blame response",!1)}dispose(){var t;(t=this.statusBar)==null||t.dispose(),this.decorationType.dispose()}command(){return a("statusBarMessageClickAction")==="Open tool URL"?"gitblame.online":"gitblame.quickInfo"}text(t,i){this.statusBar.text="$(git-commit) "+t.trimEnd(),this.statusBar.tooltip=`git blame${i?"":" - No info about the current line"}`,this.statusBar.command=i?this.command():void 0}};var I=require("fs");var f=(e,t=" ")=>{let i=e.indexOf(t[0]);return i===-1?[e,""]:[e.substr(0,i),e.substr(i+1).trim()]};var Nt=e=>({author:{mail:"",name:"",timestamp:"",date:new Date,tz:""},committer:{mail:"",name:"",timestamp:"",date:new Date,tz:""},hash:e,summary:""}),zt=e=>({commit:e,filename:""});function*Ht(e){let t=0;for(;t<e.length;){let i=e.indexOf(`
`,t);yield f(e.toString("utf8",t,i)),t=i+1}}var jt=(e,t,i)=>{t==="time"?(e.timestamp=i,e.date=new Date(parseInt(i,10)*1e3)):t==="tz"||t==="mail"?e[t]=i:t===""&&(e.name=i)},Vt=(e,t,i)=>{let[o,r]=f(e,"-");(o==="author"||o==="committer")&&jt(i[o],r,t)},tt=e=>/^\w{40}$/.test(e),_t=(e,t)=>tt(e)&&/^\d+ \d+ \d+$/.test(t),Kt=(e,t,i)=>{e==="summary"?i.summary=t:tt(e)?i.hash=e:Vt(e,t,i)};function*qt(e){let[t,i,o]=e.split(" ").map(Number);for(let r=0;r<o;r++)yield{source:t+r,result:i+r}}function*Q(e,t,i){if(!(e===void 0||t===void 0)){i.set(e.commit.hash,e.commit);for(let o of t)yield{...e,line:o}}}function*Yt(e,t){let i,o;for(let[r,n]of Ht(e))_t(r,n)&&(i=zt(t.get(r)??Nt(r)),o=qt(n)),i&&(r==="filename"?(i.filename=n,yield*Q(i,o,t)):Kt(r,n,i.commit));yield*Q(i,o,t)}async function*et(e){let t=new Map;for await(let i of e??[])yield*Yt(i,t)}async function it(e){for await(let t of e??[])if(typeof t=="string")throw new Error(t)}var ot=require("vscode"),s=class{static getInstance(){return s.instance??=new s}constructor(){this.out=ot.window.createOutputChannel("Git Blame",{log:!0})}static error(t){t instanceof Error&&s.getInstance().out.error(t)}static info(t){s.getInstance().out.info(t)}dispose(){s.instance=void 0,this.out.dispose()}};var st=require("child_process"),W=require("path"),at=require("vscode");var rt=require("child_process");var nt=async(e,t,i={})=>{s.info(`${e} ${t.join(" ")}`);let o;try{o=(0,rt.execFile)(e,t,{...i,encoding:"utf8"})}catch(n){return s.error(n),""}let r="";for await(let n of(o==null?void 0:o.stdout)??[])r+=n;return r.trim()};var S=()=>{let e=at.extensions.getExtension("vscode.git");return e!=null&&e.exports.enabled?e.exports.getAPI(1).git.path:"git"},g=(e,...t)=>nt(S(),t,{cwd:(0,W.dirname)(e)}),mt=async e=>{let t=p();return u(t)?g(t.document.fileName,"ls-remote","--get-url",e):""},ct=async e=>{let t=p();if(!u(t))return"";let{fileName:i}=t.document,o=await g(i,"symbolic-ref","-q","--short","HEAD"),r=await g(i,"config",`branch.${o}.remote`);return g(i,"config",`remote.${r||e}.url`)},$=async e=>g(e,"rev-parse","--git-dir"),lt=async e=>!!await $(e),pt=e=>{let t=["blame","-C","--incremental","--",e];return a("ignoreWhitespace")&&t.splice(1,0,"-w"),s.info(`${S()} ${t.join(" ")}`),(0,st.spawn)(S(),t,{cwd:(0,W.dirname)(e)})},ut=async()=>{let e=p();if(!u(e))return"";let{fileName:t}=e.document;return g(t,"ls-files","--full-name","--",t)},dt=async e=>{let t=p();if(!u(t))return"";let i=await g(t.document.fileName,"rev-parse","--abbrev-ref",`${e}/HEAD`);return f(i,"/")[1]};var ft=require("fs/promises"),gt=require("path"),C=class{constructor(t){this.killed=!1;this.store=this.blame(t)}dispose(){var t;(t=this.process)==null||t.kill(),this.killed=!0}async*run(t){var i,o;this.process=pt(t),yield*et((i=this.process)==null?void 0:i.stdout),await it((o=this.process)==null?void 0:o.stderr)}async blame(t){let i=new Map,o=await(0,ft.realpath)(t);try{for await(let r of this.run(o))i.set(r.line.result,r)}catch(r){s.error(r),this.dispose()}if(!this.killed)return(0,gt.relative)(t,o)?s.info(`Blamed "${o}" (resolved via symlink from "${t}")`):s.info(`Blamed "${o}"`),i}};var P=class{constructor(){this.files=new Map;this.fsWatchers=new Map}async file(t){return this.get(t)}async getLine(t,i){let o=i+1,r=await this.get(t);return r==null?void 0:r.get(o)}removeFromRepository(t){for(let[i]of this.files)i.startsWith(t)&&this.remove(i)}async remove(t){var i,o;(i=await this.files.get(t))==null||i.dispose(),(o=this.fsWatchers.get(t))==null||o.close(),this.files.delete(t),this.fsWatchers.delete(t)}dispose(){for(let[t]of this.files)this.remove(t)}async get(t){var i;if(!this.files.has(t)){let o=this.create(t);o.then(r=>{r&&this.fsWatchers.set(t,(0,I.watch)(t,()=>{this.remove(t)}))}),this.files.set(t,o)}return(i=await this.files.get(t))==null?void 0:i.store}async create(t){try{if(await I.promises.access(t),await lt(t))return new C(t)}catch{}s.info(`Will not blame '${t}'. Outside the current workspace.`)}};var Tt=require("vscode"),wt=require("url");var ht=require("url"),yt=e=>{let t;try{t=new ht.URL(e)}catch{return!1}return t.href!==e||t.protocol!=="http:"&&t.protocol!=="https:"?!1:!!(t.hostname&&t.pathname)};var vt=require("url");var G=e=>e.replace(/\.git$/i,""),E=e=>G(e).replace(/^([a-z-]+:\/\/)?([\w%:\\]+?@)?/i,"").replace(/:([a-z_.~+%-][a-z0-9_.~+%-]+)\/?/i,"/$1/");var bt=e=>{var o;let t=(o=/^(https?):/.exec(e))==null?void 0:o[1],i;try{i=new vt.URL(`${t??"https"}://${E(e)}`)}catch{return}return i.port=t?i.port:"",i};var xt=e=>{var t;return((t=/([a-zA-Z0-9_~%+.-]*?)(\.git)?$/.exec(e))==null?void 0:t[1])??""};var N=require("vscode"),L=(e,t=[])=>Promise.resolve(N.window.showInformationMessage(e,...t)),b=(e,...t)=>Promise.resolve(N.window.showErrorMessage(e,...t));var z=(e,t,i="/")=>e.split(i).filter(r=>!!r)[Number(t)]||"invalid-index",Xt=({hostname:e})=>t=>t===""?e:z(e,t,"."),Zt=e=>{if(/^[a-z]+?@/.test(e)){let[,t]=f(e,":");return(i="")=>i===""?"/"+t:z(t,i)}try{let{pathname:t}=new wt.URL(e);return(i="")=>i===""?t:z(t,i)}catch{return()=>"no-remote-url"}},Jt=e=>(a("pluralWebPathSubstrings")??[]).some(t=>e.includes(t)),Qt=async e=>{let t=a("remoteName"),i=await mt(t);if(i===t)return;let o=E(await ct(t)),r=bt(o),n=await ut(),l=await dt(t);return{hash:e.commit.hash,"tool.protocol":(r==null?void 0:r.protocol)??"https:","tool.commitpath":`/commit${Jt(o)?"s":""}/`,"project.name":xt(i),"project.remote":o,"project.defaultbranch":l,"gitorigin.hostname":r?Xt(r):"no-origin-url","gitorigin.path":Zt(G(i)),"gitorigin.port":r!=null&&r.port?`:${r.port}`:"","file.path":n,"file.path.result":n,"file.path.source":e.filename,"file.line":e.line.result.toString(),"file.line.result":e.line.result.toString(),"file.line.source":e.line.source.toString()}},U=async e=>{if(!e||d(e.commit))return;let t=await Qt(e);if(t===void 0)return;let i=v(a("commitUrl"),t);if(yt(i))return Tt.Uri.parse(i,!0);b(`Malformed gitblame.commitUrl: '${i}' from '${a("commitUrl")}'`)};var Ct=require("fs"),h=require("path");var k=class{constructor(){this.heads=new Map;this.filesWithFoundHeads=new Set;this.callback=()=>{}}onChange(t){this.callback=t}async addFile(t){if(this.filesWithFoundHeads.has(t))return;this.filesWithFoundHeads.add(t);let i=await $(t),o=this.normalizeWindowsDriveLetter((0,h.resolve)((0,h.dirname)(t),i));if(this.heads.has(o)===!0||i==="")return;let n=(0,h.resolve)(o,"..");this.heads.set(o,(0,Ct.watch)((0,h.join)(o,"HEAD"),{persistent:!1},()=>this.callback({gitRoot:o,repositoryRoot:n})))}dispose(){for(let[,t]of this.heads)t.close();this.callback=()=>{}}normalizeWindowsDriveLetter(t){return t[0].toLowerCase()+t.substr(1)}};var A=class{constructor(){this.blame=new P,this.view=new w,this.headWatcher=new k,this.disposable=this.setupListeners(),this.updateView()}async blameLink(){let t=await U(await this.commit(!0));t?m.commands.executeCommand("vscode.open",t):b("Empty gitblame.commitUrl")}async showMessage(){var n;let t=await this.commit();if(!t||d(t.commit)){this.view.clear();return}let i=v(a("infoMessageFormat"),T(t.commit)),o=await U(t),r=o?[{title:"View",action(){m.commands.executeCommand("vscode.open",o)}}]:void 0;this.view.set(t.commit,p()),(n=await L(i,r))==null||n.action()}async copyHash(){let t=await this.commit(!0);t&&!d(t.commit)&&(await m.env.clipboard.writeText(t.commit.hash),L("Copied hash"))}async copyToolUrl(){let t=await this.commit(!0),i=await U(t);i?(await m.env.clipboard.writeText(i.toString()),L("Copied tool URL")):b("gitblame.commitUrl config empty")}dispose(){this.view.dispose(),this.disposable.dispose(),this.blame.dispose(),this.headWatcher.dispose()}setupListeners(){let t=i=>{let{scheme:o}=i.document.uri;(o==="file"||o==="untitled")&&this.updateView(i)};return this.headWatcher.onChange(({repositoryRoot:i})=>{this.blame.removeFromRepository(i)}),m.Disposable.from(m.window.onDidChangeActiveTextEditor(i=>{u(i)?(this.view.activity(),this.blame.file(i.document.fileName),t(i)):this.view.clear()}),m.window.onDidChangeTextEditorSelection(({textEditor:i})=>{t(i)}),m.workspace.onDidSaveTextDocument(()=>{this.updateView()}),m.workspace.onDidCloseTextDocument(i=>{this.blame.remove(i.fileName)}))}async updateView(t=p(),i=a("delayBlame")){if(!u(t)){this.view.clear();return}this.view.activity(),this.headWatcher.addFile(t.document.fileName);let o=R(t),r=await this.blame.getLine(t.document.fileName,t.selection.active.line);i>0&&await new Promise(l=>setTimeout(l,i));let n=R(t);(o===n||n===O)&&this.view.set(r==null?void 0:r.commit,t)}async commit(t=!1){let i=()=>b("Unable to blame current line"),o=p();if(!u(o)){i();return}t||this.view.activity(),this.headWatcher.addFile(o.document.fileName);let r=await this.blame.getLine(o.document.fileName,o.selection.active.line);return r||i(),r}};var F=(e,t)=>Pt.commands.registerCommand(`gitblame.${e}`,t),te=e=>{let t=new A;e.subscriptions.push(t,s.getInstance(),F("quickInfo",()=>{t.showMessage()}),F("online",()=>{t.blameLink()}),F("addCommitHashToClipboard",()=>{t.copyHash()}),F("addToolUrlToClipboard",()=>{t.copyToolUrl()}))};
