import { CanIUseHelper } from '../src/canIUse/index';

describe('caniuse', () => {
  const helper = new CanIUseHelper({
    logger: console,
  } as any);
  updateCanIUseData(helper);
  it('can get keys', () => {
    const result = helper.getSubCanIUseData('ap.');
    console.log(`ðŸš€ ~ file: canIUse.test.ts:6 ~ it ~ resutl`, result);
    expect(result.size).toBeGreaterThan(0);
  });
  it('can ignore #o', () => {
    const result = helper.getSubCanIUseData('ap.navigateToFinance.');
    console.log(`ðŸš€ ~ file: canIUse.test.ts:6 ~ it ~ resutl`, result);
    expect(result.size).toBeGreaterThan(0);
  });
  it('can ignore #o full', () => {
    const result = helper.getSubCanIUseData('addCardAuth.success.result');
    console.log(`ðŸš€ ~ file: canIUse.test.ts:16 ~ it ~ result`, result);
    expect(result.size).toBeGreaterThan(0);

    const result2 = helper.getSubCanIUseData('addCardAuth.success.');
    console.log(`ðŸš€ ~ file: canIUse.test.ts:16 ~ it ~ result2`, result2);
    expect(result2).toContain('addCardAuth.success.result');
    expect(result2).toContain('addCardAuth.success.code');
    expect(result2).toContain('addCardAuth.success.success');
  });
  it('can ignore #o full1', () => {
    const result2 = helper.getSubCanIUseData(
      'ap.createTracert.return.send.object.fn.'
    );
    console.log(`ðŸš€ ~ file: canIUse.test.ts:16 ~ it ~ result2`, result2);
    expect(result2).toContain(
      'ap.createTracert.return.send.object.fn.remoteLog'
    );
  });
  it('will ignore compactInfo keys', () => {
    const result2 = helper.getSubCanIUseData(
      'ap.getMainSelectedCity.success.districtCode.'
    );
    console.log(`ðŸš€ ~ file: canIUse.test.ts:16 ~ it ~ result2`, result2);
    expect(result2.size).toEqual(0);
  });
  it('will ignore compactInfo keys values', () => {
    const result2 = helper.getSubCanIUseData(
      'ap.getMainSelectedCity.success.districtCode._'
    );
    console.log(`ðŸš€ ~ file: canIUse.test.ts:16 ~ it ~ result2`, result2);
    expect(result2.size).toEqual(0);
  });
});

function updateCanIUseData(helper: CanIUseHelper) {
  helper.canIUseData = {
    ap: {
      navigateToFinance: {
        '#overload1': {
          object: {
            fundCode: {
              __compact: {},
              _end: 'string-literal',
            },
            type: {
              __compact: {},
              _end: '"portfolioDetail"-literal',
              portfolioDetail: {},
            },
          },
        },
        '#overload2': {
          object: {
            amount: {
              __compact: {},
            },
            fundCode: {
              __compact: {},
              _end: 'string-literal',
            },
            type: {
              __compact: {},
              _end: '"fundBuy"-literal',
              fundBuy: {},
            },
          },
        },
        '#overload3': {
          object: {
            fundCode: {
              __compact: {},
              _end: 'string-literal',
            },
            type: {
              __compact: {},
              _end: '"goldBuy"-literal',
              goldBuy: {},
            },
          },
        },
        '#overload4': {
          object: {
            amount: {
              __compact: {},
            },
            fundCode: {
              __compact: {},
              _end: 'string-literal',
            },
            type: {
              __compact: {},
              _end: '"portfolioBuy"-literal',
              portfolioBuy: {},
            },
          },
        },
        '#overload5': {
          object: {
            amount: {
              __compact: {},
            },
            day: {
              __compact: {},
            },
            fundCode: {
              __compact: {},
              _end: 'string-literal',
            },
            period: {
              __compact: {},
              _end: 'string-literal',
            },
            type: {
              __compact: {},
              _end: '"fundSign"-literal',
              fundSign: {},
            },
          },
        },
        '#overload6': {
          object: {
            amount: {
              __compact: {},
            },
            day: {
              __compact: {},
            },
            funcCode: {
              __compact: {},
              _end: 'string-literal',
            },
            period: {
              __compact: {},
              _end: 'string-literal',
            },
            type: {
              __compact: {},
              _end: '"goldSign"-literal',
              goldSign: {},
            },
          },
        },
        '#overload7': {
          object: {
            pid: {
              __compact: {},
              _end: 'string-literal',
            },
            type: {
              __compact: {},
              _end: '"wealthShop"-literal',
              wealthShop: {},
            },
          },
        },
        '#overload8': {
          object: {
            type: {
              __compact: {},
              _end: '"h5Page"-literal',
              h5Page: {},
            },
            url: {
              __compact: {},
              _end: 'string-literal',
            },
          },
        },
        __compact: {},
        object: {
          fundCode: {
            __compact: {},
            _end: 'string-literal',
          },
          type: {
            __compact: {},
            _end: '"fundDetail"-literal',
            fundDetail: {},
          },
        },
        success: {
          _end: 'void-literal',
        },
      },
      getMainSelectedCity: {
        __compact: {},
        success: {
          districtCode: {
            __compact: {
              android: {
                version_added: '10.1.99',
              },
              ios: {
                version_added: '10.1.99',
              },
            },
            _end: 'string-literal',
          },
        },
      },
      createTracert: {
        __compact: {},
        return: {
          _kind: 'ns',
          _ns: 'Tracert',
          apFrameworkScheme: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          appId: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          appVersion: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          appendChinfo: {
            __compact: {},
            object: {},
            return: {
              _end: 'void-literal',
            },
          },
          autoLogPv: {
            __compact: {},
            return: {
              _end: 'boolean-literal',
            },
          },
          bizType: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          chInfo: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          checkFullLinkParams: {
            __compact: {},
            object: {},
            return: {
              _end: 'void-literal',
            },
          },
          click: {
            __compact: {},
            object: {
              extraParams: {
                __compact: {},
              },
              options: {
                __compact: {},
              },
              spmId: {
                __compact: {},
                _end: 'string-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          clickContent: {
            __compact: {},
            object: {
              newChinfo: {
                __compact: {},
                _end: 'string-literal',
              },
              newScm: {
                __compact: {},
                _end: 'string-literal',
              },
              params: {
                __compact: {},
              },
              scm: {
                __compact: {},
                _end: 'string-literal',
              },
              spmId: {
                __compact: {},
                _end: 'string-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          debug: {
            __compact: {},
            return: {
              _end: 'boolean-literal',
            },
          },
          expo: {
            __compact: {},
            object: {
              extraParams: {
                __compact: {},
              },
              options: {
                __compact: {},
              },
              spmId: {
                __compact: {},
                _end: 'string-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          expoContent: {
            __compact: {},
            object: {
              newChinfo: {
                __compact: {},
                _end: 'string-literal',
              },
              newScm: {
                __compact: {},
                _end: 'string-literal',
              },
              params: {
                __compact: {},
              },
              scm: {
                __compact: {},
                _end: 'string-literal',
              },
              spmId: {
                __compact: {},
                _end: 'string-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          get: {
            __compact: {},
            object: {
              key: {
                __compact: {},
              },
            },
            success: {},
          },
          getChinfoChain: {
            __compact: {},
            object: {
              callback: {
                __compact: {},
                _end: '() => void-literal',
              },
              options: {
                __compact: {},
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          getChinfoChainUUID: {
            __compact: {},
            object: {
              callback: {
                __compact: {},
                _end: '() => void-literal',
              },
              option: {
                __compact: {},
                bizName: {
                  __compact: {},
                  _end: 'string-literal',
                },
                isFiltered: {
                  __compact: {},
                },
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          getCurrentPageParams: {
            __compact: {},
            object: {
              callback: {
                __compact: {},
                _end: '() => void-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          getValueOfUrl: {
            __compact: {},
            object: {
              name: {
                __compact: {},
                _end: 'string-literal',
              },
              url: {
                __compact: {},
                _end: 'string-literal',
              },
            },
            return: {
              _end: 'string-literal',
            },
          },
          handleUEPEvent: {
            __compact: {},
            object: {
              actionId: {
                __compact: {},
                _end: 'string-literal',
              },
              bizType: {
                __compact: {},
                _end: 'string-literal',
              },
              eventTime: {
                __compact: {},
                _end: 'number-literal',
              },
              logLevel: {
                __compact: {},
                _end: 'number-literal',
              },
              newScm: {
                __compact: {},
                _end: 'string-literal',
              },
              param1: {
                __compact: {},
                _end: 'string-literal',
              },
              param4: {
                __compact: {},
              },
              param5: {
                __compact: {},
                _end: 'string-literal',
              },
              scm: {
                __compact: {},
              },
              spmId: {
                __compact: {},
                _end: 'string-literal',
              },
              type: {
                __compact: {},
                _end: 'string-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          isTraced: {
            __compact: {},
            return: {
              _end: 'boolean-literal',
            },
          },
          logLevel: {
            __compact: {},
            return: {
              _end: 'number-literal',
            },
          },
          logPv: {
            __compact: {},
            object: {},
            return: {
              _end: 'void-literal',
            },
          },
          mdata: {
            __compact: {},
          },
          query: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          ready: {
            __compact: {},
            return: {
              _end: 'boolean-literal',
            },
          },
          reportUEPData: {
            __compact: {},
            object: {
              spm: {
                __compact: {},
                bizType: {
                  __compact: {},
                  _end: 'string-literal',
                },
                chInfo: {
                  __compact: {},
                  _end: 'string-literal',
                },
                isSPM: {
                  __compact: {},
                  _end: 'boolean-literal',
                },
                spmId: {
                  __compact: {},
                  _end: 'string-literal',
                },
                url: {
                  __compact: {},
                  _end: 'string-literal',
                },
              },
              spmDetail: {
                __compact: {},
                chInfo: {
                  __compact: {},
                  _end: 'string-literal',
                },
                url: {
                  __compact: {},
                  _end: 'string-literal',
                },
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          scm: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          send: {
            '#overload1': {
              object: {
                fn: {
                  __compact: {},
                  _end: '"remoteLog"-literal',
                  remoteLog: {},
                },
                getOption: {
                  __compact: {},
                  _end: '() => ITracertHandleUEPDataOptions-literal',
                },
              },
            },
            __compact: {},
            object: {
              fn: {
                __compact: {},
                _end: '"reportData"-literal',
                reportData: {},
              },
              getOption: {
                __compact: {},
                _end: '() => ITracertReportUEPDataOptions-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          set: {
            __compact: {},
            object: {
              appendChinfo: {
                __compact: {},
                _end: 'unknown-literal',
              },
              checkFullLinkParams: {
                __compact: {},
                _end: 'unknown-literal',
              },
              click: {
                __compact: {},
                _end: 'unknown-literal',
              },
              clickContent: {
                __compact: {},
                _end: 'unknown-literal',
              },
              expo: {
                __compact: {},
                _end: 'unknown-literal',
              },
              expoContent: {
                __compact: {},
                _end: 'unknown-literal',
              },
              getChinfoChain: {
                __compact: {},
                _end: 'unknown-literal',
              },
              getChinfoChainUUID: {
                __compact: {},
                _end: 'unknown-literal',
              },
              getCurrentPageParams: {
                __compact: {},
                _end: 'unknown-literal',
              },
              getValueOfUrl: {
                __compact: {},
                _end: 'unknown-literal',
              },
              handleUEPEvent: {
                __compact: {},
                _end: 'unknown-literal',
              },
              logPv: {
                __compact: {},
                _end: 'unknown-literal',
              },
              reportUEPData: {
                __compact: {},
                _end: 'unknown-literal',
              },
              send: {
                __compact: {},
                _end: 'unknown-literal',
              },
              setCurrentPageNewChinfo: {
                __compact: {},
                _end: 'unknown-literal',
              },
              setNextPageNewChinfo: {
                __compact: {},
                _end: 'unknown-literal',
              },
              setNextPageParams: {
                __compact: {},
                _end: 'unknown-literal',
              },
              setPageParams: {
                __compact: {},
                _end: 'unknown-literal',
              },
              start: {
                __compact: {},
                _end: 'unknown-literal',
              },
              updateChinfo: {
                __compact: {},
                _end: 'unknown-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },
          setCurrentPageNewChinfo: {
            __compact: {},
            object: {},
            return: {
              _end: 'void-literal',
            },
          },
          setNextPageNewChinfo: {
            __compact: {},
            object: {},
            return: {
              _end: 'void-literal',
            },
          },
          setNextPageParams: {
            __compact: {},
            object: {
              chInfo: {
                __compact: {},
                _end: 'string-literal',
              },
              chinfo: {
                __compact: {},
                _end: 'string-literal',
              },
              entityId: {
                __compact: {},
                _end: 'string-literal',
              },
              isforce: {
                __compact: {},
              },
              newChinfo: {
                __compact: {},
                _end: 'string-literal',
              },
              scm: {
                __compact: {},
                _end: 'string-literal',
              },
              tracestep: {
                __compact: {},
                _end: 'number-literal',
              },
            },
            return: {
              _end: 'void-literal',
            },
          },

          spmAPos: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          spmBPos: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
          start: {
            __compact: {},
            object: {},
            return: {
              _end: 'void-literal',
            },
          },
          trace: {
            __compact: {},
            return: {
              _end: 'boolean-literal',
            },
          },
          uepCombineMode: {
            __compact: {},
            return: {
              _end: 'boolean-literal',
            },
          },
          updateChinfo: {
            __compact: {},
            object: {},
            return: {
              _end: 'void-literal',
            },
          },
          url: {
            __compact: {},
            return: {
              _end: 'string-literal',
            },
          },
        },
      },
    },
    addCardAuth: {
      '#overload1': {
        success: {
          code: {
            __compact: {},
          },
          success: {
            __compact: {},
            _end: 'false-literal',
          },
        },
      },
      __compact: {
        android: {
          version_added: '',
        },
        ios: {
          version_added: '',
        },
        sdk: '2.0',
      },
      object: {
        url: {
          __compact: {},
          _end: 'string-literal',
        },
      },
      success: {
        result: {
          __compact: {},
          app_id: {
            __compact: {},
            _end: 'string-literal',
          },
          auth_code: {
            __compact: {},
            _end: 'string-literal',
          },
          out_string: {
            __compact: {},
            _end: 'string-literal',
          },
          request_id: {
            __compact: {},
            _end: 'string-literal',
          },
          scope: {
            __compact: {},
            _end: 'string-literal',
          },
          state: {
            __compact: {},
            _end: 'string-literal',
          },
          template_id: {
            __compact: {},
            _end: 'string-literal',
          },
        },
        resultStatus: {
          '9000': {},
          __compact: {},
          _end: '"9000"-literal',
        },
        success: {
          __compact: {},
          _end: 'true-literal',
        },
      },
    },
  } as any;
}
