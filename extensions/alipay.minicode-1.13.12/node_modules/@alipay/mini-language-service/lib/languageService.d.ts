import { GetCompletionsAtPositionProvider } from './services/getCompletionsAtPosition';
import { SuggestionDiagnosticsProvider } from './services/getSuggestionDiagnostics';
import { IMiniLanguageService, IMiniLanguageServiceConfig, IMiniLanguageServiceContext } from './types';
export declare class MiniLanguageService implements IMiniLanguageService {
    private context;
    completionProvider: GetCompletionsAtPositionProvider;
    suggestionDiagnosticsProvider: SuggestionDiagnosticsProvider;
    constructor(context: IMiniLanguageServiceContext);
    intercept(method: string, ...params: any[]): any;
    getCompletionsAtPosition: (fileName: string, position: number, options: import("typescript/lib/tsserverlibrary").GetCompletionsAtPositionOptions) => import("typescript/lib/tsserverlibrary").WithMetadata<import("typescript/lib/tsserverlibrary").CompletionInfo>;
    getSuggestionDiagnostics: (fileName: string) => import("typescript/lib/tsserverlibrary").DiagnosticWithLocation[];
    dispose(): void;
    options: IMiniLanguageServiceConfig;
    updateOptions(options: IMiniLanguageServiceConfig): void;
}
