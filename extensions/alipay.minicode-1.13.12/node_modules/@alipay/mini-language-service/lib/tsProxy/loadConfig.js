"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTsConfig = void 0;
function getTsConfig(ts, workspacePath) {
    const configFilename = ts.findConfigFile(workspacePath, ts.sys.fileExists, 'tsconfig.json') ||
        ts.findConfigFile(workspacePath, ts.sys.fileExists, 'jsconfig.json');
    const configJson = (configFilename &&
        ts.readConfigFile(configFilename, ts.sys.readFile).config) || {
        exclude: defaultIgnorePatterns(workspacePath),
    };
    // existingOptions should be empty since it always takes priority
    const parsedConfig = ts.parseJsonConfigFileContent(configJson, ts.sys, workspacePath, 
    /*existingOptions*/ {}, configFilename, 
    /*resolutionStack*/ undefined, [
        {
            extension: 'ts',
            isMixedContent: true,
            scriptKind: ts.ScriptKind.Deferred,
        },
    ]);
    const compilerOptions = Object.assign({}, parsedConfig.options);
    compilerOptions.allowNonTsExtensions = true;
    compilerOptions.allowJs = true;
    compilerOptions.noUnusedLocals = false;
    compilerOptions.noUnusedParameters = false;
    compilerOptions.strict = false;
    return {
        compilerOptions,
        fileNames: parsedConfig.fileNames,
    };
}
exports.getTsConfig = getTsConfig;
function defaultIgnorePatterns(workspacePath) {
    return ['node_modules', '**/node_modules/*'];
}
