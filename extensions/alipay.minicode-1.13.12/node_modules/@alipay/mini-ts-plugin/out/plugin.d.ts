import type ts_module from 'typescript/lib/tsserverlibrary';
import { Logger } from './logger';
import { ITSPlugin } from './types';
import { MiniLanguageService } from '@alipay/mini-language-service';
import type { SynchronizedConfiguration } from '@alipay/mini-extensions-shared/lib/tsPlugin';
import { TypingHelper } from '@alipay/mini-extensions-shared/lib/node/typingHelper';
import type { IMiniLanguageServiceContext } from '@alipay/mini-language-service/lib/types';
export declare class TSPlugin implements ITSPlugin {
    readonly ts: typeof ts_module;
    readonly logger: Logger;
    readonly info: ts.server.PluginCreateInfo;
    project: ts_module.server.Project;
    private config;
    isInsideUser: boolean;
    miniLanguageService: MiniLanguageService;
    context: IMiniLanguageServiceContext;
    typingHelper: TypingHelper;
    constructor(ts: typeof ts_module, logger: Logger, info: ts.server.PluginCreateInfo);
    createProxy(): any;
    getGlobalTypePath(): string;
    getTypePath(): string;
    updateConfig(config: SynchronizedConfiguration): void;
    hasFile(absolutePaths: string[], fileNames: string[]): boolean;
    injectTyping(compilerOptions: ts.CompilerOptions): ts_module.CompilerOptions | undefined;
    updateCompilerOptions(): void;
}
