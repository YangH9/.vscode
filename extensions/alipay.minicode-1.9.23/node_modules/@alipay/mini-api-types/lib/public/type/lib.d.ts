export declare type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends {
        [P in K]: T[K];
    } ? never : K;
}[keyof T];
export declare type Never<T extends never> = T & never;
export declare type GetProperty<T, K, F = void> = K extends keyof T ? T[K] : F;
//# sourceMappingURL=lib.d.ts.map