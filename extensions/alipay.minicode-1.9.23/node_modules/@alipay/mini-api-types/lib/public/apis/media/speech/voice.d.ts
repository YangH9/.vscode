import { API, APIType } from '../../../type';
export interface TypeExport<S> {
}
/**
 * @name 播放语音
 */
export interface APIExport<S> {
    [API.playVoice]: playVoice;
    [API.pauseVoice]: pauseVoice;
    [API.resumeVoice]: resumeVoice;
    [API.stopVoice]: stopVoice;
}
/**
 * @description 开始播放语音，同时只允许一个语音文件正在播放，如果前一个语音文件没有播放完，前一个播放将被中段，新的语音播放开始。
 */
interface playVoice {
    type: APIType.Async;
    request: {
        /**
         * @description 音频文件路径，只能来源自 `startRecord` 的录音文件路径。
         */
        filePath: string;
    };
}
/**
 * @description 暂停播放语音。如果再次调用 `playVoice` 播放同一个语音文件，会从暂停处开始播放，如果要从头开始播放，可以先调用 `stopVoice`。
 */
interface pauseVoice {
    type: APIType.Async;
    request: void;
    response: void;
}
/**
 * @description 继续播放语音，恢复被 `pauseVoice` 中断的语音播放。
 */
interface resumeVoice {
    type: APIType.Async;
    request: void;
    response: void;
}
/**
 * @description 停止播放语音。
 */
interface stopVoice {
    type: APIType.Async;
    request: void;
    response: void;
}
export {};
//# sourceMappingURL=voice.d.ts.map