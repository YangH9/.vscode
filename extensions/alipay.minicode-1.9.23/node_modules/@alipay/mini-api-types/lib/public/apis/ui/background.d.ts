import { API, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 窗口背景
 */
export interface APIExport<S> {
    [API.setBackgroundColor]: setBackgroundColor;
    [API.setBackgroundTextStyle]: setBackgroundTextStyle;
    [API.setWebViewTop]: setWebViewTop;
    [API.setBackgroundImage]: setBackgroundImage;
    [API.removeBackgroundImage]: removeBackgroundImage;
}
/**
 * @description 动态设置窗口的背景色
 * @tutorial api 设置颜色
 * @file
 * ```js
 * my.setBackgroundColor({
 *   backgroundColorTop: '#00ff00',
 *   backgroundColorBottom: '#ff00ff'
 * })
 * ```
 */
interface setBackgroundColor {
    type: APIType.Async;
    request: {
        /**
         * @description 窗口的背景色
         * @example "#00ff00"
         */
        backgroundColor?: string;
        /**
         * @description 顶部窗口的背景色，仅 iOS 支持
         * @example "#00ff00"
         */
        backgroundColorTop?: string;
        /**
         * @description 底部窗口的背景色，仅 iOS 支持
         * @example "#00ff00"
         */
        backgroundColorBottom?: string;
    };
}
/**
 * @description 动态设置下拉 loading 页面的文字颜色
 */
interface setBackgroundTextStyle {
    type: APIType.Async;
    request: {
        /**
         * @description 下拉背景字体、loading 图的样式
         */
        textStyle: `${ESetBackgroundTextStyle}`;
    };
}
declare const enum ESetBackgroundTextStyle {
    dark = "dark",
    light = "light"
}
/**
 * @description 曾经用于星巴克小程序二楼动画，现无使用场景
 * @deprecated
 */
interface setWebViewTop {
    type: APIType.Async;
    request: {
        /**
         * @description top:回到顶部，bottom:往下移出视图
         */
        position: 'top' | 'bottom';
        /**
         * @description 是否需要过渡动画
         */
        animated?: boolean;
    };
    response: {
        /**
         * @description 是否调用完成
         */
        success: boolean;
    };
}
/**
 * @deprecated
 */
interface setBackgroundImage {
    type: APIType.Async;
    request: {
        /**
         * @description 图片对应的链接，支持dataURL/相对路径/离线资源
         */
        imgUrl: string;
        /**
         * @description 图片的背景颜色，用于填补图片透明或空缺的位置
         */
        color?: number;
    };
    response: {
        /**
         * @description 是否调用完成
         */
        success: boolean;
    };
}
/**
 * @description 移除 `my.setBackgroundImage` 的调用结果
 * @deprecated
 */
interface removeBackgroundImage {
    type: APIType.Async;
    request: void;
    response: {
        /**
         * @description 是否调用完成
         */
        success: boolean;
    };
}
export {};
//# sourceMappingURL=background.d.ts.map