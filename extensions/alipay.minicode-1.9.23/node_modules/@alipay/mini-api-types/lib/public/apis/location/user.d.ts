import { API, APIDefaultErrorResponse, APIType, Flag, FlagDef } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 用户操作
 */
export interface APIExport<S> {
    [API.chooseLocation]: chooseLocation;
    [API.chooseCity]: chooseCity<S>;
    [API.onLocatedComplete]: onLocatedComplete;
    [API.offLocatedComplete]: offLocatedComplete;
    [API.openLocation]: openLocation;
    [API.regionPicker]: regionPicker;
}
/**
 * @description 使用支付宝内置地图选择地理位置。
 * - 暂无境外地图数据，在中国内地（不含港澳台）以外的地区可能无法正常调用此 API。
 * - 仅支持高德地图 style 与火星坐标系。
 */
interface chooseLocation {
    type: APIType.Async;
    request: void;
    response: {
        /**
         * @description 位置名称。
         */
        name: string;
        /**
         * @description 地址的详细说明。
         */
        address: string;
        /**
         * @description 经度。
         */
        longitude: string;
        /**
         * @description 纬度。
         */
        latitude: string;
        /**
         * @description 省份名称。
         */
        provinceName: string;
        /**
         * @description 城市名称。
         */
        cityName: string;
    };
}
/**
 * @description 打开城市选择列表。
 */
interface chooseCity<S> {
    type: APIType.Async;
    request: {
        /**
         * @description 是否显示当前定位城市。
         * @default false
         */
        showLocatedCity?: boolean;
        /**
         * @description 是否显示热门城市。
         * @default true
         */
        showHotCities?: boolean;
        /**
         * @description 是否修改当前定位城市，如果 showLocatedCity 为 false，此设置无效。
         * @default false
         */
        setLocatedCity?: boolean;
        /**
         * @description 自定义城市列表。
         */
        cities?: city[];
        /**
         * @description 自定义热门城市列表。
         */
        hotCities?: city[];
        /**
         * @description 自定义历史访问城市列表。
         */
        customHistoryCities?: city[];
    };
    response: {
        /**
         * @description 城市名。
         */
        city: string;
        /**
         * @description 行政区划代码。
         */
        adCode: string;
        /**
         * @description 经度（注意：仅用户选择当前定位城市才会返回）。
         */
        longitude: FlagDef<S, number, Flag.Location.ChooseCityLatitude>;
        /**
         * @description 纬度（注意：仅用户选择当前定位城市才会返回）。
         */
        latitude: FlagDef<S, number, Flag.Location.ChooseCityLongitude>;
    };
}
interface city {
    /**
     * @description 城市名。
     */
    city: string;
    /**
     * @description 行政区划代码。不同行政区域对应的代码可参见 中华人民共和国县以上行政区划代码。
     */
    adCode: string;
    /**
     * @description 城市名对应拼音拼写，方便用户搜索。
     */
    spell: string;
}
/**
 * @description 监听该页面地理位置定位完的回调，只针对 `chooseCity` 中属性 `setLocatedCity` 为 `true` 的情况。
 */
interface onLocatedComplete {
    type: APIType.Async;
    request: void;
    response: {
        /**
         * @description 当前定位城市经度。
         */
        longitude: number;
        /**
         * @description 当前定位城市经度。
         */
        latitude: number;
        /**
         * @description 当前定位城市 id，setLocatedCity 的时候带上。
         */
        locatedCityId: string;
    };
}
/**
 * @description 取消监听地理位置定位完成事件，只针对 `chooseCity` 中属性 `setLocatedCity` 为 `true` 的情况。
 */
interface offLocatedComplete {
    type: APIType.Fn;
    /**
     * @param callback 监听的回调函数。
     */
    fn: (callback: Function) => void;
}
/**
 * @description 使用支付宝内置地图查看位置。
 * - 暂无境外地图数据，在中国内地（不含港澳台）以外的地区可能无法正常调用此 API。
 * - 仅支持高德地图 style 与火星坐标系。
 */
interface openLocation {
    type: APIType.Async;
    request: {
        /**
         * @description 经度。
         */
        longitude: string;
        /**
         * @description 纬度。
         */
        latitude: string;
        /**
         * @description 位置名称。
         */
        name: string;
        /**
         * @description 地址的详细说明。
         */
        address: string;
        /**
         * @description 缩放比例，范围 3~19。
         * @default 15
         */
        scale?: number;
    };
    response: void;
}
/**
 * @description 多级省市区选择器，自带省市区数据源。
 */
interface regionPicker {
    type: APIType.Async;
    request: {
        /**
         * @description 标题。
         */
        title?: string;
        /**
         * @description 可为每一列的顶部添加一个自定义的选项。
         */
        customItem?: string;
        /**
         * @description 自定义修改城市数据，支持删除、添加和更新城市信息。
         * - 对城市信息的删除、添加、更新操作不会全局生效，仅单次生效。
         */
        mergeOptions?: mergeOptions;
        /**
         * @description 表示选中的省市区，默认选中每一列的第一个值。
         */
        selectedItem?: string[];
    };
    /**
     * @description 返回示例：`{"data":["福建","莆田","城厢区"]}`。
     */
    response: {
        /**
         * @description 选择的省市区名称数组。
         */
        data: string[];
    };
    error: regionPickerError;
}
interface mergeOptions {
    /**
     * @description 删除城市信息。
     */
    remove: remove[];
    /**
     * @description 添加城市信息。
     */
    add: add[];
    /**
     * @description 更新城市信息。
     */
    update: update[];
}
interface remove {
    /**
     * @description 需要移除的省份 ID。
     */
    id: string;
}
interface add {
    /**
     * @description 插入点之上的省份 ID。
     */
    pid: string;
    /**
     * @description 插入点之下的省份 ID。
     */
    nextId: string;
    /**
     * @description 增加对象的 ID。
     */
    id: string;
    /**
     * @description 增加对象的名称。
     */
    name: string;
    /**
     * @description 省内完整的市和区信息。示例：`"subList": [{ "name": "北京市", "id": "110100", "subList": [{ "name": "东城区", "id": "110101" }]`。
     */
    subList: subList[];
}
interface update {
    /**
     * @description 更新对象的 ID。
     */
    id: string;
    /**
     * @description 增加对象的名称。
     */
    name: string;
    /**
     * @description 省内完整的市和区信息。示例：`"subList": [{ "name": "北京市", "id": "110100", "subList": [{ "name": "东城区", "id": "110101" }]`。
     */
    subList: subList[];
}
interface subList {
    /**
     * @description 名称
     */
    name: string;
    /**
     * @description ud
     */
    id: string;
}
interface regionPickerError extends APIDefaultErrorResponse {
    /**
     * @description 错误码。
     * - `11` 用户取消选择。
     * - `10001` 用户没有选择数据。
     */
    error: number;
}
export {};
//# sourceMappingURL=user.d.ts.map