import { API, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 插件
 */
export interface APIExport<S> {
    [API.loadPlugin]: loadPlugin;
    [API.getParentAppId]: getParentAppId;
    [API.getParentAppIdSync]: getParentAppIdSync;
}
/**
 * @description 动态加载插件。
 *
 * 为了给开发者提供更好的体验，我们提供了动态加载插件的方式，不用在 `app.json` 中声明插件依赖，而是使用 `loadPlugin` 动态加载插件。这样小程序不用启动阶段就下载插件包，而是等到使用时，再下载插件包，可以有更好的性能体验。
 *
 * **前提条件**：
 * - 使用插件前需完成 [插件订购](https://yuque.antfin-inc.com/tiny-site/plugin/plugin-order)。
 * - 需要在 `app.json` 中做如下声明: `{ "useDynamicPlugins": true }`
 *
 * 插件更详细的文档请看 [此处](https://yuque.antfin.com/miniprogram-docs/guide/basic-plugin-ability)。
 */
interface loadPlugin {
    type: APIType.Async;
    request: {
        /**
         * @description 需要加载的插件 id。也可以指定要加载的插件id和版本号。
         * 例如：`2019235609092837@*`，为 `*` 时则距离上次拉包超过24小时会拉取最新版本。
         */
        plugin: string;
    };
}
/**
 * @description 在插件中获取宿主小程序的 appId。
 */
interface getParentAppId {
    type: APIType.Fn;
    /**
     * @returns 直接返回使用该插件的小程序 appId。
     */
    fn: () => string;
}
/**
 * @description 在插件中获取宿主小程序的 appId。
 */
interface getParentAppIdSync {
    type: APIType.Sync;
    response: {
        /**
         * @description 使用该插件的小程序 appId。
         */
        appId: string;
    };
}
export {};
//# sourceMappingURL=plugin.d.ts.map