import { API, APIDefaultErrorResponse, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 芝麻信用
 * @description 该系列 API 目前仅支持 **支付宝** 客户端内使用，推荐优先使用 `my.ap.*` 业务域，不推荐使用 `my.*` 顶级域
 */
export interface APIExport<S> {
    [API.ap$zmCreditBorrow]: ap$zmCreditBorrow;
    [API.zmCreditBorrow]: zmCreditBorrow;
    [API.ap$zmRentTransition]: ap$zmRentTransition;
    [API.zmRentTransition]: zmRentTransition;
    [API.ap$zmFreeDeposit]: ap$zmFreeDeposit;
    [API.zmFreeDeposit]: zmFreeDeposit;
    [API.ap$startZMCreditRent]: ap$startZMCreditRent;
    [API.startZMCreditRent]: startZMCreditRent;
    [API.ap$startZMVerify]: ap$startZMVerify;
    [API.startZMVerify]: startZMVerify;
}
interface startZMVerify {
    type: APIType.Alias;
    alias: API.ap$startZMVerify;
}
/**
 * @description 芝麻认证接口，调用此接口可以唤起芝麻认证页面并进行人脸身份验证。
 * - 需要通过蚂蚁开发平台，调用 `certification.initialize` 接口进行 认证初始化。获得 biz_no 后，方能通过以下接口激活芝麻认证小程序。
 */
interface ap$startZMVerify {
    type: APIType.Async;
    request: {
        /**
         * @description 认证标识
         */
        bizNo: string;
    };
    response: {
        /**
         * @description 认证标识
         */
        token: string;
        /**
         * @description 认证是否通过
         */
        passed: string;
        /**
         * @description 认证不通过原因
         */
        reason?: string;
    };
}
interface zmCreditBorrow {
    type: APIType.Alias;
    alias: API.ap$zmCreditBorrow;
}
/**
 * @description 唤起芝麻信用页面。有关信用借还详细功能，见信用借还产品介绍。
 *
 * 说明：
 * - 如果参数值中有中文, 请使用 encodeURIComponent 来编码参数值； 如果 invoke_state 的 JSON 字符串的某一项值包含中文，请使用 encodeURIComponent 对该值进行编码
 * - 支付宝商户账号登录[我的商家服务](https://mrchportalweb.alipay.com/user/ihome.htm)打开入口链接； 商家服务中选择“您可能需要->信用借还”或者点击[链接](https://zmmcportal.zmxy.com.cn/borrow/zmpensetting.htm#/config/scene)； 场景ID配置->配置新ID，选择对应的业务类型、服务类目和联盟，将生成的场景ID作为credit_biz的值传入即可； 回调地址配置->设置小程序回调地址，注意：若设置了该回调地址，则接口 `zmCreditBorrow` 中的入参 `invoke_return_url` 将会失效，以该处设置为准。
 * - 小程序回调地址示例一：`alipays://platformapi/startapp?appId=1999； 小程序回调地址示例二：alipays://platformapi/startapp?appId=1999&page=pages/map`
 */
interface ap$zmCreditBorrow {
    type: APIType.Async;
    request: zmCreditBorrowRequest4OpenZMCreditBorrowPage | zmCreditBorrowRequest4OpenZMCreditBorrowMapPage;
    response: {
        /**
         * @description 商户发起借用服务时传入的参数，需要在借用结束后返回给商户的参数。
         */
        'invoke_state': string;
        /**
         * @description 外部订单号，需要唯一，由商户传入，芝麻内部会做幂等控制，格式为：yyyyMMddHHmmss+4位随机数
         */
        'out_order_no': string;
        /**
         * @description 芝麻信用借还订单号
         */
        'order_no': string;
        /**
         * @description 是否准入，该字段目前无实际意义。
         * - `Y` 准入
         * - `N` 不准入
         */
        'admit_state': 'Y' | 'N';
        /**
         * @description 物品借用/租赁者的用户id
         */
        'user_id': string;
        /**
         * @description 状态码。
         * - `'6001'` 用户取消了业务流程
         * - `'6002'` 网络异常
         * - `'9000'` 成功
         * - `'4000'` 系统异常
         */
        resultStatus: string;
    };
    error: zmCreditBorrowError;
}
/**
 * @description 唤起芝麻信用页面参数。
 */
interface zmCreditBorrowRequest4OpenZMCreditBorrowPage {
    /**
     * @description 外部订单号，需要唯一，由商户传入，芝麻内部会做幂等控制，格式为：yyyyMMddHHmmss+随机数
     */
    'out_order_no': string;
    /**
     * @description 信用借还的产品码，传入固定值：w1010100000000002858
     */
    'product_code': string;
    /**
     * @description 物品名称，最长不能超过14个汉字。
     */
    'goods_name': string;
    /**
     * @description 租金单位，租金+租金单位组合才具备实际的租金意义。
     */
    'rent_unit': `${ERentUnit}`;
    /**
     * @description 租金，租金+租金单位组合才具备实际的租金意义。 >0.00元，代表有租金 =0.00元，代表无租金，免费借用 注：参数传值必须>=0，传入其他值会报错参数非法
     */
    'rent_amount': string;
    /**
     * @description 押金，金额单位：元。 注：不允许免押金的用户按此金额支付押金；当物品丢失时，赔偿金额不得高于该金额。
     */
    'deposit_amount': string;
    /**
     * @description 是否支持当借用用户信用不够（不准入）时，可让用户支付押金借用，该字段目前默认传 Y，注：支付押金的金额等同于 `deposit_amount`。
     */
    'deposit_state': `${EDepositState}`;
    /**
     * @description 回调到商户的小程序schema地址。说明：商户的回调地址可以在商户后台里进行配置，服务端回调时，首先根据参数：invoke_type 查询是否有对应的配置地址，如果有，则使用已定义的地址，否则，使用该字段定义的地址执行回调。
     */
    'invoke_return_url': string;
    /**
     * @description 商户访问蚂蚁的对接模式，默认传 TINYAPP。
     * - TINYAPP：回跳至小程序地址
     * - WINDOWS：支付宝服务窗
     */
    'invoke_type': `${EInvokeType}`;
    /**
     * @description 信用业务服务，注意：该字段不能为空，且必须根据说明的指引配置商户专属的场景ID，商户自助接入时，登录后台可配置场景ID，将后台配置的场景ID作为该字段的输入； 参考说明一自助进行配置；
     */
    'credit_biz': string;
    /**
     * @description 商户订单创建的起始借用时间，格式：`YYYY-MM-DD HH:MM:SS`。如果不传入或者为空，则认为订单创建起始时间为调用此接口时的时间。
     */
    'borrow_time'?: string;
    /**
     * @description 到期时间，不允许为空，请根据实际业务合理设置该值，格式：`YYYY-MM-DD HH:MM:SS`，是指最晚归还时间，表示借用用户如果超过此时间还未完结订单（未归还物品或者未支付租金）将会进入逾期状态，芝麻会给借用用户发送催收提醒；需要晚于 `borrow_time`。
     */
    'expiry_time': string;
    /**
     * @description 借用用户的手机号码。推荐商户传入此值，会将此手机号码与用户身份信息进行匹配验证，防范欺诈风险。
     */
    'mobile_no'?: string;
    /**
     * @description 物品借用地点的描述，便于用户知道物品是在哪里借的。
     */
    'borrow_shop_name'?: string;
    /**
     * @description 租金的结算方式，非必填字段，默认是支付宝租金结算支付。
     * - merchant：表示商户自行结算，信用借还不提供租金支付能力
     * - alipay：表示使用支付宝支付功能，给用户提供租金代扣及赔偿金支付能力；
     * @default alipay
     */
    'rent_settle_type'?: `${ERentSettleType}`;
    /**
     * @description 商户请求状态上下文。商户发起借用服务时，需要在借用结束后返回给商户的参数，格式：json； 如果json的某一项值包含中文，请使用 encodeURIComponent 对该值进行编码。
     * - 例如：`var ext = { name: encodeURIComponent('名字') }; var obj = { invoke_state: JSON.stringify(ext) }`
     */
    'invoke_state'?: string;
    /**
     * @description 租金信息描述，长度不超过14个汉字，只用于页面展示给C端用户，除此之外无其他意义。
     */
    'rent_info'?: string;
    /**
     * @description 借用用户的真实姓名，非必填字段。但 `name` 和 `cert_no` 必须同时非空，或者同时为空，一旦传入会对用户身份进行校验。
     */
    'name'?: string;
    /**
     * @description 借用用户的真实身份证号，非必填字段。但 `name` 和 `cert_no` 必须同时非空，或者同时为空，一旦传入会对用户身份进行校验。
     */
    'cert_no'?: string;
    /**
     * @description 借用用户的收货地址，可选字段，最大长度128。推荐商户传入此值，会将此手机号码与用户身份信息进行匹配验证，防范欺诈风险。
     */
    'address'?: string;
}
declare const enum ERentUnit {
    /**
     * @description 元/天
     */
    'DAY_YUAN' = "DAY_YUAN",
    /**
     * @description 元/小时
     */
    'HOUR_YUAN' = "HOUR_YUAN",
    /**
     * @description 元
     */
    'YUAN' = "YUAN",
    /**
     * @description  元/次
     */
    'YUAN_ONCE' = "YUAN_ONCE"
}
declare const enum EDepositState {
    /**
     * @description 支持
     */
    Y = "Y",
    /**
     * @description 不支持
     */
    N = "N"
}
declare const enum EInvokeType {
    /**
     * @description 回跳至小程序地址
     */
    TINYAPP = "TINYAPP",
    /**
     * @description 支付宝服务窗
     */
    WINDOWS = "WINDOWS"
}
declare const enum ERentSettleType {
    /**
     * @description 表示商户自行结算，信用借还不提供租金支付能力
     */
    merchant = "merchant",
    /**
     * @description 表示使用支付宝支付功能，给用户提供租金代扣及赔偿金支付能力；
     */
    alipay = "alipay"
}
/**
 * @description 跳转到地图页面。
 */
interface zmCreditBorrowRequest4OpenZMCreditBorrowMapPage {
    /**
     * @description 仅跳转到地图页面时才存在该属性，值必须为 'map'。
     */
    borrowPage: string;
    /**
     * @description 仅跳转到地图页面时存在该属性。要展示的类目。
     */
    spuName: `${ESpuName}`;
}
declare const enum ESpuName {
    'power_bank' = "power_bank",
    'umbrella' = "umbrella"
}
interface zmCreditBorrowError extends APIDefaultErrorResponse {
    /**
     * @description 错误码。
     */
    error: `${EZmCreditBorrowErrorCode}`;
}
declare const enum EZmCreditBorrowErrorCode {
    /**
     * @description 参数有误，请确认参数格式。
     */
    'INVALID_PARAMETER' = "INVALID_PARAMETER",
    /**
     * @description 商户对产品未签约，请联系业务与芝麻签约信用借还产品。
     */
    'ARRANGEMENT_NOT_EXIST' = "ARRANGEMENT_NOT_EXIST",
    /**
     * @description 目前不支持押金模式，请与芝麻业务确认。
     */
    'DEPOSIT_CLOSED' = "DEPOSIT_CLOSED",
    /**
     * @description 该物品已经借用，请先归还后再借。
     */
    'GOODS_HAS_BORROW' = "GOODS_HAS_BORROW",
    /**
     * @description 该用户预授权冻结押金失败，请确认支付宝账号中是否有足够的金额。
     */
    'PREAUTH_FREEZE_ERROR' = "PREAUTH_FREEZE_ERROR",
    /**
     * @description 签约代扣协议错误，请联系支付宝客服。
     */
    'WITHHOLD_CONTRACT_ERROR' = "WITHHOLD_CONTRACT_ERROR",
    /**
     * @description 芝麻会员开通失败，请确保支付宝会员是否正常。
     */
    'ZM_ACCOUT_REGISTER_FAIL' = "ZM_ACCOUT_REGISTER_FAIL",
    /**
     * @description 外部订单号重复，请更换外部订单号。
     */
    'OUT_ORDER_NO_INVALID' = "OUT_ORDER_NO_INVALID",
    /**
     * @description 该支付宝账号没有登录，请登录支付宝。
     */
    'USER_NOT_LOGON' = "USER_NOT_LOGON",
    /**
     * @description 信息含敏感内容，请检查入参信息是否包含敏感内容。
     */
    'INFOSEC_VERIFY_FAILED' = "INFOSEC_VERIFY_FAILED"
}
interface startZMCreditRent {
    type: APIType.Alias;
    alias: API.ap$startZMCreditRent;
}
/**
 * @description 信用租，小程序调用此接口打开芝麻信用租页面。
 */
interface ap$startZMCreditRent {
    type: APIType.Async;
    request: {
        /**
         * @description 固定传：`rent`
         */
        creditRentType: string;
        /**
         * @description 类目（芝麻开发给到），暂时可以用：`ZMSC_2_1`
         */
        category: string;
        /**
         * @description 商品内容
         */
        subject: subject;
        /**
         * @description 逾期时间，`yyyy-MM-dd HH:mm:ss`，需要大于当前时间
         */
        'overdue_time': string;
        /**
         * @description 该次支付总金额，单位为元，精确到小数点后两位，取值范围 `[0.01,100000000]`
         */
        amount: string;
        /**
         * @description 外部订单号，即商户自己的订单号
         */
        'out_order_no': string;
        /**
         * @description 入驻信用套餐分配的项目id
         */
        'item_id': string;
        /**
         * @description 订单处理url，商户处理订单的页面，例如订单详情url
         */
        'order_process_url': string;
    };
    response: {
        /**
         * @description 是否成功
         */
        'success': boolean;
        /**
         * @description 错误码
         */
        'error_code': string;
        /**
         * @description 错误说明
         */
        'error_msg': string;
        /**
         * @description 商户订单号
         */
        'out_order_no': string;
        /**
         * @description 芝麻订单号
         */
        'zm_order_no': string;
        /**
         * @description 下单状态。
         * - `SUCCESS` 下单成功
         * - `FAIL` 下单失败
         * - `UNKOWN` 处理中
         */
        'order_status': `${EOrderStatus}`;
        /**
         * @description 订单创建时间
         */
        'order_create_time': string;
    };
    error: zmRentTransitionError;
}
interface zmRentTransition {
    type: APIType.Alias;
    alias: API.ap$zmRentTransition;
}
/**
 * @description 代扣预授权
 */
interface ap$zmRentTransition {
    type: APIType.Async;
    request: {
        /**
         * @description 固定传：signPay。
         */
        creditRentType: string;
        /**
         * @description 商户业务标识，透传。
         */
        channel: string;
        /**
         * @description 该次支付总金额，单位为元，精确到小数点后两位，取值范围 [0.01,100000000]。
         */
        amount: string;
        /**
         * @description 押金；单位为元，精确到小数点后两位，取值范围 [0.01,100000000]。
         */
        deposit: string;
        /**
         * @description 芝麻订单号。
         */
        zmOrderNo: string;
        /**
         * @description 类目（芝麻开发给到），暂时可以用：ZMSC_2_1。
         */
        category: string;
        /**
         * @description 外部订单号，即商户自己的订单号。
         */
        outOrderNo: string;
        /**
         * @description 逾期时间，yyyy-MM-dd HH:mm:ss，需要大于当前时间。
         */
        'overdue_time': string;
        subject: subject;
    };
    response: {
        /**
         * @description 是否成功。
         */
        success: boolean;
        /**
         * @description 商户订单号。
         */
        'out_order_no': string;
        /**
         * @description 芝麻订单号。
         */
        'zm_order_no': string;
        /**
         * @description 下单状态。
         */
        'order_status': `${EOrderStatus}`;
        /**
         * @description 订单创建时间。
         */
        'order_create_time': string;
    };
    error: zmRentTransitionError;
}
interface subject {
    products: product[];
}
interface product {
    amount: string;
    count: number;
    name: string;
}
declare const enum EOrderStatus {
    /**
     * @description 下单成功
     */
    SUCCESS = "SUCCESS",
    /**
     * @description 下单失败
     */
    FAIL = "FAIL",
    /**
     * @description 处理中
     */
    UNKOWN = "UNKOWN"
}
interface zmRentTransitionError extends APIDefaultErrorResponse {
    /**
     * @description 错误码。
     */
    error: `${EZmRentTransitionErrorCode}`;
}
declare const enum EZmRentTransitionErrorCode {
    /**
     * @description 系统错误，稍后再试。
     */
    'SYSTEM_FAILURE' = "SYSTEM_FAILURE",
    /**
     * @description 订单不存在。
     */
    'ORDER_NOT_EXISTS' = "ORDER_NOT_EXISTS",
    /**
     * @description 验签错误。
     */
    'SIGN_ERROR' = "SIGN_ERROR",
    /**
     * @description 签约代扣协议失败。
     */
    'WITHHOLDING_FAILED' = "WITHHOLDING_FAILED",
    /**
     * @description 该用户预授权冻结资金失败，请确认支付宝账号中是否有足够的金额。
     */
    'PREAUTH_FREEZE_ERROR' = "PREAUTH_FREEZE_ERROR",
    /**
     * @description 订单确认失败。
     */
    'ORDER_CONFIRM_ERROR' = "ORDER_CONFIRM_ERROR"
}
interface zmFreeDeposit {
    type: APIType.Alias;
    alias: API.ap$zmFreeDeposit;
}
/**
 * @description 芝麻企业信用免押接口，小程序调用此接口打开芝麻企业信用免押页面。
 */
interface ap$zmFreeDeposit {
    type: APIType.Async;
    request: {
        /**
         * @description 后端生成的 openapi 地址。
         */
        url: string;
        /**
         * @description 当前环境。
         * @default prod
         */
        env?: `${EZmFreeDepositEnv}`;
    };
    response: {
        /**
         * @description 免押流程是否完成
         */
        success: boolean;
        /**
         * @description 流程完成时返回的JSON字符串
         */
        'biz_content': string;
        /**
         * @description 流程完成时返回的签名
         */
        sign: string;
        /**
         * @description 流程完成时返回的额度状态。
         * - `HAS_LIMIT` 有授信额度
         * - `NO_LIMIT` 无授信额度
         */
        'status_code': `${EZmFreeDepositStatusCode}`;
    };
}
declare const enum EZmFreeDepositEnv {
    /**
     * @description 生产
     */
    prod = "prod",
    /**
     * @description 测试
     */
    stable = "stable"
}
declare const enum EZmFreeDepositStatusCode {
    /**
     * @description 有授信额度
     */
    'HAS_LIMIT' = "HAS_LIMIT",
    /**
     * @description 无授信额度
     */
    'NO_LIMIT' = "NO_LIMIT"
}
export {};
//# sourceMappingURL=credit.d.ts.map