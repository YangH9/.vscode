import { API, APIDefaultErrorResponse, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name mDNS
 */
export interface APIExport<S> {
    [API.startLocalServiceDiscovery]: startLocalServiceDiscovery;
    [API.stopLocalServiceDiscovery]: stopLocalServiceDiscovery;
    [API.onLocalServiceResolveFail]: onLocalServiceResolveFail;
    [API.onLocalServiceLost]: onLocalServiceLost;
    [API.onLocalServiceFound]: onLocalServiceFound;
    [API.onLocalServiceDiscoveryStop]: onLocalServiceDiscoveryStop;
    [API.offLocalServiceResolveFail]: offLocalServiceResolveFail;
    [API.offLocalServiceLost]: offLocalServiceLost;
    [API.offLocalServiceFound]: offLocalServiceFound;
    [API.offLocalServiceDiscoveryStop]: offLocalServiceDiscoveryStop;
}
/**
 * @description 开始搜索局域网下的 mDNS 服务。搜索的结果会通过 `onLocalService*` 事件返回。
 * - `startLocalServiceDiscovery` 是一个消耗性能的行为，开始 `30` 秒后会自动 `stop` 并执行 `onLocalServiceDiscoveryStop` 注册的回调函数。
 * - 在调用 `startLocalServiceDiscovery` 后，在这次搜索行为停止后才能发起下次 `startLocalServiceDiscovery`。
 * - 停止本次搜索行为的操作包括调用 `stopLocalServiceDiscovery` 和 `30` 秒后系统自动 stop 本次搜索。
 */
interface startLocalServiceDiscovery {
    type: APIType.Async;
    native: 'startLocalServiceDiscovery';
    request: {
        /**
         * @description 要搜索的服务类型。
         */
        serviceType: string;
    };
}
/**
 * @description 停止搜索 mDNS 服务。
 */
interface stopLocalServiceDiscovery {
    type: APIType.Async;
    native: 'stopLocalServiceDiscovery';
    request: void;
    response: void;
    error: stopLocalServiceDiscoveryError;
}
interface stopLocalServiceDiscoveryError extends APIDefaultErrorResponse {
    /**
     * @description 错误码。
     */
    error: EStopLocalServiceDiscoveryErrorCode;
}
declare const enum EStopLocalServiceDiscoveryErrorCode {
    /**
     * @description 未发现任务。
     */
    '_60001' = 60001
}
/**
 * @description 监听 mDNS 服务解析失败的事件。
 */
interface onLocalServiceResolveFail {
    type: APIType.Event;
    event: ServiceInfo;
}
/**
 * @description 监听 mDNS 服务离开的事件。
 */
interface onLocalServiceLost {
    type: APIType.Event;
    event: ServiceInfo;
}
/**
 * @description 监听 mDNS 服务发现的事件。
 */
interface onLocalServiceFound {
    type: APIType.Event;
    event: ServiceInfo & ServiceAddress;
}
/**
 * @description 监听 mDNS 服务停止搜索的事件。
 */
interface onLocalServiceDiscoveryStop {
    type: APIType.Event;
    event: void;
}
/**
 * @description 取消监听 mDNS 服务解析失败的事件。
 */
interface offLocalServiceResolveFail {
    type: APIType.Fn;
    /**
     * @param callback
     * - 不传递 `callback` 值，则会移除监听**所有**的事件回调。
     * - 传递 `callback` 值，只移除**对应**的 `callback` 事件。
     */
    fn: (callback?: Function) => void;
}
/**
 * @description 取消监听 mDNS 服务离开的事件。
 */
interface offLocalServiceLost {
    type: APIType.Fn;
    /**
     * @param callback
     * - 不传递 `callback` 值，则会移除监听**所有**的事件回调。
     * - 传递 `callback` 值，只移除**对应**的 `callback` 事件。
     */
    fn: (callback?: Function) => void;
}
/**
 * @description 取消监听 mDNS 服务发现的事件。
 */
interface offLocalServiceFound {
    type: APIType.Fn;
    /**
     * @param callback
     * - 不传递 `callback` 值，则会移除监听**所有**的事件回调。
     * - 传递 `callback` 值，只移除**对应**的 `callback` 事件。
     */
    fn: (callback?: Function) => void;
}
/**
 * @description 取消监听 mDNS 服务停止搜索的事件。
 */
interface offLocalServiceDiscoveryStop {
    type: APIType.Fn;
    /**
     * @param callback
     * - 不传递 `callback` 值，则会移除监听**所有**的事件回调。
     * - 传递 `callback` 值，只移除**对应**的 `callback` 事件。
     */
    fn: (callback?: Function) => void;
}
interface ServiceInfo {
    /**
     * @description 服务类型。
     */
    serviceType: string;
    /**
     * @description 服务名称。
     */
    serviceName: string;
}
interface ServiceAddress {
    /**
     * @description 服务的端口。
     */
    port: number;
    /**
     * @description 服务的 ip 地址。
     */
    ip: string;
}
export {};
//# sourceMappingURL=mdns.d.ts.map