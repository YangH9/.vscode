import { API, APIType, Type, TypeRef } from '../../type';
export interface TypeExport<S> {
    [Type.App.ReferrerInfo]: referrerInfo;
}
/**
 * @name 应用信息
 */
export interface APIExport<S> {
    [API.getLaunchOptionsSync]: getLaunchOptionsSync<S>;
    [API.getEnterOptionsSync]: getEnterOptionsSync<S>;
    [API.getAppIdSync]: getAppIdSync;
    [API.getRunScene]: getRunScene<S>;
    [API.SDKVersion]: SDKVersion<S>;
    [API.isIDE]: isIDE<S>;
}
/**
 * @description 获取小程序启动时的参数, 与 `App.onLaunch` 的回调参数一致
 */
interface getLaunchOptionsSync<S> {
    type: APIType.Fn;
    fn: () => LaunchOptions<S>;
}
/**
 * @description 可获得小程序唤起（当小程序处于后台状态被唤起）参数，与 `App.onShow` 的回调参数一致
 */
interface getEnterOptionsSync<S> {
    type: APIType.Fn;
    fn: () => LaunchOptions<S>;
}
interface LaunchOptions<S> {
    /**
     * @description 启动小程序的路径
     */
    path: string;
    /**
     * @description 当前小程序的 query，从启动参数的 query 字段解析而来
     */
    query?: Record<string, unknown>;
    /**
     * @description 来源信息
     */
    referrerInfo?: TypeRef<S, Type.App.ReferrerInfo>;
    /**
     * @description 启动小程序的 [场景值](https://opendocs.alipay.com/mini/framework/scene)
     */
    scene: number;
}
/**
 * @name referrerInfo
 */
interface referrerInfo {
    /**
     * @description 来源小程序。
     */
    appId: string;
    /**
     * @description 以小服务模式启动的来源信息，目前已废弃
     * @deprecated
     */
    sourceServiceId?: string;
    /**
     * @description 来源小程序传过来的数据。
     */
    extraData: object;
}
/**
 * @description 用于同步获取小程序 AppId
 */
interface getAppIdSync {
    type: APIType.Fn;
    fn: () => getAppIdReturn;
}
interface getAppIdReturn {
    /**
     * @description 当前小程序的 AppId
     */
    appId: string;
}
/**
 * @description 用于获取当前小程序的运行版本
 */
interface getRunScene<S> {
    type: APIType.Async;
    request: void;
    response: {
        /**
         * @description 小程序当前运行的版本
         */
        envVersion: `${envVersion}`;
    };
}
declare const enum envVersion {
    /**
     * @description 开发版
     */
    develop = "develop",
    /**
     * @description 体验版
     */
    trial = "trial",
    /**
     * @description 发布版
     */
    release = "release",
    /**
     * @description 灰度版
     */
    gray = "gray"
}
/**
 * @description 获取基础库版本号的 API
 * @tutorial api SDKVersion
 * @file
 * ```js
 * my.alert({
 *   content: my.SDKVersion,
 * });
 * ```
 */
interface SDKVersion<S> {
    type: APIType.Property;
    /**
     * @description 表示基础库版本号，如 `"1.24.10"`。
     */
    property: string;
}
/**
 * @description 代表当前小程序是否运行在 `IDE` 环境内。
 */
interface isIDE<S> {
    type: APIType.Property;
    property: boolean;
}
export {};
//# sourceMappingURL=info.d.ts.map