import { API, APIDefaultErrorResponse, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 日历
 */
export interface APIExport<S> {
    [API.addEventCal]: addEventCal;
    [API.addEventCalendar]: addEventCalendar;
}
/**
 * @description 添加日历事件。
 * @tutorial api 添加日历事件
 * @file
 * ```js
 * my.addEventCal({
 *   title: '日历标题',
 *   startDate: '2018-07-09 14:20:00',
 *   endDate: '2018-07-09 14:40:00',
 *   location: '地点',
 *   notes: '日历事件内容',
 *   alarmOffset: 10,
 *   recurrenceTimes: 2,
 *   frequency: 'day',
 *   complete: function(result) {
 *     my.alert({ content: JSON.stringify(res) });
 *   }
 * });
 * ```
 */
interface addEventCal {
    type: APIType.Async;
    native: 'addEventCal';
    request: EventCalendarObject;
    response: {
        success: boolean;
    };
    error: addEventCalError;
}
interface addEventCalError extends APIDefaultErrorResponse {
    /**
     * @description 错误码。
     */
    error: EAddEventCalErrorCode;
}
declare const enum EAddEventCalErrorCode {
    /**
     * @description 调用系统日历错误。
     */
    '_10' = 10,
    /**
     * @description 不准许访问日历。
     */
    '_11' = 11,
    /**
     * @description 写入日历错误, 比如已经存在事件了。
     */
    '_12' = 12,
    /**
     * @description 参数错误。
     */
    '_13' = 13
}
/**
 * @description 添加日历事件，只有 `iOS` 支持。
 * @tutorial api 添加日历事件
 * @file
 * ```js
 * my.addEventCalendar({
 *   title: '日历测试',
 *   startDate: '2018-07-09 14:20:00',
 *   endDate: '2018-07-09 14:40:00',
 *   location: '地点',
 *   notes: '日历事件内容',
 *   alarmOffset: 10,
 *   recurrenceTimes: 2,
 *   frequency: 'day',
 *   complete: (res) => {
 *     my.alert({ content: JSON.stringify(res) });
 *   }
 * });
 * ```
 */
interface addEventCalendar {
    type: APIType.Async;
    native: 'addEventCalendar';
    request: EventCalendarObject;
    response: {
        success: boolean;
    };
    error: addEventCalendarError;
}
interface addEventCalendarError extends APIDefaultErrorResponse {
    /**
     * @description 错误码。
     */
    error: EAddEventCalendarErrorCode;
}
declare const enum EAddEventCalendarErrorCode {
    /**
     * @description 用户拒绝。
     */
    '_11' = 11,
    /**
     * @description 事件已存在。
     */
    '_12' = 12,
    /**
     * @description 参数错误。
     */
    '_13' = 13,
    /**
     * @description 调用系统日历错误。
     */
    '_14' = 14,
    /**
     * @description 写入日历错误。
     */
    '_15' = 15
}
interface EventCalendarObject {
    /**
     * @description 日历标题。
     */
    title: string;
    /**
     * @description 开始时间。
     */
    startDate: string;
    /**
     * @description 结束时间。
     */
    endDate: string;
    /**
     * @description 事件发生地点。
     */
    location?: string;
    /**
     * @description 事件内容。
     */
    notes?: string;
    /**
     * @description 事件开始前多少分钟提醒。
     */
    alarmOffset?: number;
    /**
     * @description 循环发生次数。
     */
    recurrenceTimes?: number;
    /**
     * @description 循环频率。`frequency` 和 `recurrenceTimes` 若有值，则都必须有值。
     */
    frequency?: `${EEventCalendarObjectFrequency}`;
}
declare const enum EEventCalendarObjectFrequency {
    year = "year",
    month = "month",
    week = "week",
    day = "day"
}
export {};
//# sourceMappingURL=calendar.d.ts.map