"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ECalculateRouteSearchType;
(function (ECalculateRouteSearchType) {
    ECalculateRouteSearchType["walk"] = "walk";
    ECalculateRouteSearchType["bus"] = "bus";
    ECalculateRouteSearchType["drive"] = "drive";
    ECalculateRouteSearchType["ride"] = "ride";
})(ECalculateRouteSearchType || (ECalculateRouteSearchType = {}));
var ECalculateRouteMode;
(function (ECalculateRouteMode) {
    /**
     * @description 最快捷模式，速度优先（时间）。
     */
    ECalculateRouteMode[ECalculateRouteMode["_0"] = 0] = "_0";
    /**
     * @description 最经济模式，费用优先（不走收费路段的最快道路）。
     */
    ECalculateRouteMode[ECalculateRouteMode["_1"] = 1] = "_1";
    /**
     * @description 最少换乘模式，距离优先。
     */
    ECalculateRouteMode[ECalculateRouteMode["_2"] = 2] = "_2";
    /**
     * @description 最少步行模式，不走快速路。
     */
    ECalculateRouteMode[ECalculateRouteMode["_3"] = 3] = "_3";
    /**
     * @description 最舒适模式，结合实时交通（躲避拥堵）。
     */
    ECalculateRouteMode[ECalculateRouteMode["_4"] = 4] = "_4";
    /**
     * @description 不乘地铁模式，多策略（同时使用速度优先、费用优先、距离优先三个策略）。
     */
    ECalculateRouteMode[ECalculateRouteMode["_5"] = 5] = "_5";
    /**
     * @description 不走高速。
     */
    ECalculateRouteMode[ECalculateRouteMode["_6"] = 6] = "_6";
    /**
     * @description 不走高速且避免收费。
     */
    ECalculateRouteMode[ECalculateRouteMode["_7"] = 7] = "_7";
    /**
     * @description 躲避收费和拥堵。
     */
    ECalculateRouteMode[ECalculateRouteMode["_8"] = 8] = "_8";
    /**
     * @description 不走高速且躲避收费和拥堵。
     */
    ECalculateRouteMode[ECalculateRouteMode["_9"] = 9] = "_9";
})(ECalculateRouteMode || (ECalculateRouteMode = {}));
//# sourceMappingURL=map.js.map