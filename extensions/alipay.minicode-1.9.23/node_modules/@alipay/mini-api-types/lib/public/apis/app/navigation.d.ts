import { API, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 导航
 */
export interface APIExport<S> {
    [API.navigateTo]: navigateTo;
    [API.navigateBack]: navigateBack;
    [API.redirectTo]: redirectTo;
    [API.switchTab]: switchTab;
    [API.reLaunch]: reLaunch;
}
/**
 * @description 从当前页面，跳转到当前应用内的某个指定页面
 */
interface navigateTo {
    type: APIType.Async;
    request: {
        /**
         * @description 需要跳转的目标页面路径
         * 路径后可以带参数, 目标路径必须为应用内非 tabbar 的，路径与参数之间使用 ?分隔，参数键与参数值用=相连，不同参数必须用&分隔
         * @example page/index/index?key1=value1&key2=value2
         */
        url: string;
    };
    response: void;
    error: void;
}
/**
 * @description 关闭当前页面，返回上一级或多级页面
 */
interface navigateBack {
    type: APIType.Async;
    request: {
        /**
         * @description 返回的页面数
         * 如果 delta 大于现有打开的页面数，则返回到首页
         * @default 1
         */
        delta?: number;
    };
    response: void;
    error: void;
}
/**
 * @description 关闭当前页面，返回上一级或多级页面
 */
interface redirectTo {
    type: APIType.Async;
    request: {
        /**
         * @description 需要跳转的目标页面路径
         * 路径后可以带参数, 目标路径必须为应用内非 tabbar 的，路径与参数之间使用 ?分隔，参数键与参数值用=相连，不同参数必须用&分隔
         * @example page/index/index?key1=value1&key2=value2
         */
        url: string;
    };
    response: void;
    error: void;
}
/**
 * @description 跳转到指定 tab 页面，并关闭其他所有非标签页页面
 */
interface switchTab {
    type: APIType.Async;
    request: {
        /**
         * @description 跳转的特定 tab 的路径, 目标路径必须为应用内 tabbar 的，且路径后不能带参数
         */
        url: string;
    };
    response: void;
    error: void;
}
/**
 * @description 关闭当前所有页面，并重新打开应用内的某个指定页面
 */
interface reLaunch {
    type: APIType.Async;
    request: {
        /**
         * @description 需要跳转的目标页面路径，仅非 tab 页路径后可以带参数
         * 目标路径如果是非 tab 页，可以携带参数，路径与参数之间使用 `?` 分隔，参数键与参数值用 `=` 相连，不同参数必须用 `&` 分隔
         * @example page/tab/index
         * @example page/nontab/index?key1=value1&key2=value2
         */
        url: string;
    };
    response: void;
    error: void;
}
export {};
//# sourceMappingURL=navigation.d.ts.map