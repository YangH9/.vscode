"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EWebSocketError;
(function (EWebSocketError) {
    /**
     * @description 未知错误。
     */
    EWebSocketError[EWebSocketError["_1"] = 1] = "_1";
    /**
     * @description 网络连接已经存在。一个支付宝小程序在一段时间内只能保留一个 WebSocket 连接。如果当前已存在 WebSocket 连接，那么会自动关闭该连接，并重新创建一个新的 WebSocket 连接。
     */
    EWebSocketError[EWebSocketError["_2"] = 2] = "_2";
    /**
     * @description URL 参数为空，建议替换 URL 链接。
     */
    EWebSocketError[EWebSocketError["_3"] = 3] = "_3";
    /**
     * @description 无法识别的 URL 格式，建议替换 URL 链接。
     */
    EWebSocketError[EWebSocketError["_4"] = 4] = "_4";
    /**
     * @description URL 必须以 ws 或者 wss 开头，建议替换 URL 链接。
     */
    EWebSocketError[EWebSocketError["_5"] = 5] = "_5";
    /**
     * @description 连接服务器超时。
     */
    EWebSocketError[EWebSocketError["_6"] = 6] = "_6";
    /**
     * @description 服务器返回的 https 证书无效。小程序必须使用 HTTPS/WSS 发起网络请求。请求时系统会对服务器域名使用的 HTTPS 证书进行校验，如果校验失败，则请求不能成功发起。由于系统限制，不同平台对于证书要求的严格程度不同。为了保证小程序的兼容性，建议开发者按照最高标准进行证书配置，并使用相关工具检查现有证书，确保其符合要求。
     */
    EWebSocketError[EWebSocketError["_7"] = 7] = "_7";
    /**
     * @description 服务端返回协议头无效。从 2019 年 5 月开始新创建的小程序，默认强制使用 HTTPS 和 WSS 协议，不再支持 HTTP 和 WS 协议。
     */
    EWebSocketError[EWebSocketError["_8"] = 8] = "_8";
    /**
     * @description WebSocket 请求没有指定 Sec-WebSocket-Protocol 请求头。请指定 Sec-WebSocket-Protocol 请求头。
     */
    EWebSocketError[EWebSocketError["_9"] = 9] = "_9";
    /**
     * @description 网络连接没有打开，无法发送消息。请正常连接服务器后再调用 `sendSocketMessage` 发送数据消息，可通过 `onSocketOpen` 监听事件来判断与服务器建立正确连接。注意：通过 WebSocket 连接发送数据，需要先使用 `connectSocket` 发起连接，在 `onSocketOpen` 回调之后再调用 `sendSocketMessage` 发送数据。
     */
    EWebSocketError[EWebSocketError["_10"] = 10] = "_10";
    /**
     * @description 消息发送失败。
     */
    EWebSocketError[EWebSocketError["_11"] = 11] = "_11";
    /**
     * @description 无法申请更多内存来读取网络数据。
     */
    EWebSocketError[EWebSocketError["_12"] = 12] = "_12";
})(EWebSocketError || (EWebSocketError = {}));
//# sourceMappingURL=socket.js.map