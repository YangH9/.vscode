import { API, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name TabBar
 */
export interface APIExport<S> {
    [API.addTabBarItem]: addTabBarItem;
    [API.removeTabBarItem]: removeTabBarItem;
    [API.hideTabBar]: hideTabBar;
    [API.showTabBar]: showTabBar;
    [API.setTabBarItem]: setTabBarItem;
    [API.setTabBarStyle]: setTabBarStyle;
    [API.hideTabBarRedDot]: hideTabBarRedDot;
    [API.showTabBarRedDot]: showTabBarRedDot;
    [API.removeTabBarBadge]: removeTabBarBadge;
    [API.setTabBarBadge]: setTabBarBadge;
}
/**
 * @description 是动态添加 tabItem 的 API。
 * - `addTabBarItem` 最多调用 **90**次。
 */
interface addTabBarItem {
    type: APIType.Async;
    request: {
        /**
         * @description tab 标题
         */
        name: string;
        /**
         * @description 图标
         */
        icon?: string;
        /**
         * @description 选中时的图标
         */
        activeIcon?: string;
        /**
         * @description tabItem 对应的页面路径，需要配置在小程序配置文件中
         */
        pagePath: string;
        /**
         * @description item 插入位置，原位置的页面将后移一个位置，从 `0` 开始
         */
        index: number;
    };
}
/**
 * @description 是动态删除 tabItem 的 API。
 */
interface removeTabBarItem {
    type: APIType.Async;
    request: {
        /**
         * @description 要删除的 item 对应的位置，从 `0` 开始
         */
        index: number;
    };
    response: void;
}
/**
 * @description 是隐藏标签页（tabbar）的 API。
 */
interface hideTabBar {
    type: APIType.Async;
    request: {
        /**
         * @description 是否需要动画效果，默认为无动画效果。
         * @default false
         */
        animation?: boolean;
    };
    response: void;
}
/**
 * @description 是显示标签页（tabbar）的 API。
 */
interface showTabBar {
    type: APIType.Async;
    request: {
        /**
         * @description 是否需要动画效果，默认为无动画效果。
         * @default false
         */
        animation?: boolean;
    };
    response: void;
}
/**
 * @description 动态设置标签页（tabbar）某一项的内容的 API。
 */
interface setTabBarItem {
    type: APIType.Async;
    request: {
        /**
         * @description 标签页的项数序号，从左边开始计数。
         */
        index: number;
        /**
         * @description 标签页按钮上的文字。
         */
        text: string;
        /**
         * @description 图片路径，建议尺寸为 81px * 81px，支持 png/jpeg/jpg/gif 图片格式，支持网络图片。
         */
        iconPath: string;
        /**
         * @description 选中时的图片路径，建议尺寸为 81px * 81px，支持 png/jpeg/jpg/gif 图片格式，支持网络图片。
         */
        selectedIconPath: string;
    };
    response: void;
}
/**
 * @description 动态设置标签页（tabbar）的整体样式的 API，如文字颜色、标签背景色、标签边框颜色等。
 */
interface setTabBarStyle {
    type: APIType.Async;
    request: {
        /**
         * @description 标签（tab）上的文字默认颜色。HEXcolor 格式，如 `#FF0000`
         */
        color: string;
        /**
         * @description 标签（tab）上的文字选中时的颜色。HEXcolor 格式，如 `#00FF00`
         */
        selectedColor: string;
        /**
         * @description 标签（tab）的背景色。HEXcolor 格式，如 `#0000FF`
         */
        backgroundColor: string;
        /**
         * @description 标签页（tabbar）上边框的颜色（边框高度 1 px）。
         * - 支持传参如下：
         * - `black`，对应色值为 `#FFE5E5E5` 。
         * - `white`，对应色值为 `#FFFFFFFF` 。
         * - #开头的自定义的RGB色值，如 `#FFABABAE` 或 `#FFFFFF`。
         */
        borderStyle: string;
    };
    response: void;
}
/**
 * @description 隐藏标签页（tabbar）某一项右上角的红点的 API。
 */
interface hideTabBarRedDot {
    type: APIType.Async;
    request: {
        /**
         * @description 标签页的项数序号，从左边开始计数。
         */
        index: number;
    };
    response: void;
}
/**
 * @description 显示标签页（tabbar）某一项右上角的红点的 API。
 */
interface showTabBarRedDot {
    type: APIType.Async;
    request: {
        /**
         * @description 标签页的项数序号，从左边开始计数。
         */
        index: number;
    };
    response: void;
}
/**
 * @description 移除标签页（tabbar）某一项右上角的文本的 API。
 */
interface removeTabBarBadge {
    type: APIType.Async;
    request: {
        /**
         * @description 标签页的项数序号，从左边开始计数。
         */
        index: number;
    };
    response: void;
}
/**
 * @description 为标签页（tabbar）某一项的右上角添加文本的 API。可用于设置消息条数的红点提醒。
 */
interface setTabBarBadge {
    type: APIType.Async;
    request: {
        /**
         * @description 标签页的项数序号，从左边开始计数。
         */
        index: number;
        /**
         * @description 显示的文本，超过三个字符则显示 前两个字符 + “…”。例如：“支付宝” 显示 “支付宝”，“蚂蚁金服” 显示 “蚂蚁…”。
         */
        text: string;
    };
    response: void;
}
export {};
//# sourceMappingURL=tabbar.d.ts.map