import { API, APIType, Type, TypeRef } from '../../../type';
export interface TypeExport<S> {
    [Type.AR.ARContext]: ARContext<S>;
}
/**
 * @name 基础(ARContext及Scan)
 */
export interface APIExport<S> {
    [API.createARContext]: createARContext<S>;
    [API.ARScan]: ARScan;
    [API.ap$ARScan]: ap$ARScan;
}
/**
 * @description 创建并返回一个 AR 上下文对象 `ARContext`。
 */
interface createARContext<S> {
    type: APIType.Fn;
    /**
     * @param arId `<ar />` 组件的 `id`。
     */
    fn: (arId: string) => TypeRef<S, Type.AR.ARContext>;
}
interface ARContext<S> {
    type: APIType.Property;
    property: {
        /**
         * @description 获取当前设备摄像头位置。
         */
        getCameraPosition: TypeRef<S, Type.AR.ARContextGetCameraPosition>;
        /**
         * @description 转换摄像头前后置位置。
         */
        switchCameraPosition: TypeRef<S, Type.AR.ARContextSwitchCameraPosition>;
    };
}
/**
 * @description 跳转到支付宝 AR 扫一扫页面功能。
 */
interface ARScan {
    type: APIType.Fn;
    fn: () => void;
}
interface ap$ARScan {
    type: APIType.Alias;
    alias: API.ARScan;
}
export {};
//# sourceMappingURL=base.d.ts.map