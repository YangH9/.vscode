import { API, APIType, Type, TypeRef } from '../../type';
export interface TypeExport<S> {
    [Type.RDS.RDSContext]: RDSContext<S>;
    [Type.RDS.RDSContextEnableDetect]: enableDetect<S>;
    [Type.RDS.RDSContextGetRDSData]: getRDSData<S>;
}
/**
 * @name 反作弊
 */
export interface APIExport<S> {
    [API.createRDSContext]: createRDSContext<S>;
    [API.ap$preventCheat]: ap$preventCheat;
}
/**
 * @description 返回一个 `RDSContext`。
 * @tutorial api RDS
 * @file
 * ```js
 * this.rds = my.createRDSContext({appId: 'omegakoi_ddl_game_submit'});
 * let that = this;
 * this.rds.enableDetect({
 *   enabled: true,
 *   complete(res) {
 *     that.setData({ output: { enableDetect: res } });
 *     if (res.enabled) {
 *       setTimeout(() => {
 *         that.rds.getRDSData({
 *           success(res) {
 *             that.setData({ 'output.getRDSData': res });
 *           },
 *         });
 *       }, 3000);
 *     }
 *   }
 * });
 * ```
 */
interface createRDSContext<S> {
    type: APIType.Fn;
    fn: (option: createRDSContextOption) => TypeRef<S, Type.RDS.RDSContext>;
}
/**
 * @name createRDSContext.option
 */
interface createRDSContextOption {
    /**
     * @description RDS 团队分配的专有 appId
     */
    appId: string;
}
interface RDSContext<S> {
    type: APIType.Property;
    property: {
        enableDetect: TypeRef<S, Type.RDS.RDSContextEnableDetect>;
        getRDSData: TypeRef<S, Type.RDS.RDSContextGetRDSData>;
    };
}
/**
 * @description 开启/关闭 RDS检测。
 */
interface enableDetect<S> {
    type: APIType.Async;
    request: {
        /**
         * @description 是否开启 RDS 检测
         */
        enabled: boolean;
    };
    response: {
        enabled: boolean;
    };
}
/**
 * @description 获取 RDS 数据。
 */
interface getRDSData<S> {
    type: APIType.Async;
    request: void;
    response: {
        data: string;
    };
}
/**
 * @description 调用反作弊接口，根据入参说明来传参，接口会返回当前用户的风险识别结果，开发者可根据结果来做相应业务处理。
 */
interface ap$preventCheat {
    type: APIType.Async;
    request: {
        /**
         * @description 小程序的开放平台账号。
         */
        pid: string;
        /**
         * @description 小程序对应的 APPID。
         */
        appId: string;
        /**
         * @description 需要识别的业务参数。
         */
        bizContext: BizContext;
    };
    response: {
        /**
         * @description 风险识别的返回结果。
         */
        result: Result;
    };
}
/**
 * @name PreventCheat.bizContext
 */
interface BizContext {
    /**
     * @description 合作伙伴匹配服务类型，固定传 `marketing`。
     */
    service: string;
    /**
     * @description 风险策略类型，固定传 `riskinfo_anticheat_common`。
     */
    'risk_type': string;
    /**
     * @description 用于输入用户注册的手机号码。
     */
    'mobile_no': string;
    /**
     * @description 申请业务合作伙伴ID。
     */
    pid: string;
    /**
     * @description 支付宝用户ID。
     */
    'user_id'?: string;
    /**
     * @description 银行卡号。
     */
    'bank_card_no'?: string;
    /**
     * @description 用于输入用户的身份证号码。
     */
    'cert_no'?: string;
    /**
     * @description 账户登陆IP。
     */
    'client_ip'?: string;
    /**
     * @description 邮箱账号。
     */
    'email_address'?: string;
    /**
     * @description 手机序列号。
     */
    imei?: string;
    /**
     * @description 国际移动用户识别码。
     */
    imsi?: string;
    /**
     * @description mac地址或设备唯一标识。
     */
    'mac_address'?: string;
    /**
     * @description 拓展字段。
     */
    'extended_info'?: ExtendedInfo;
}
interface ExtendedInfo {
    /**
     * @description 账户昵称。
     */
    'nickname': string;
    /**
     * @description 账户注册时间。
     */
    'reg_time': string;
}
/**
 * @name PreventCheat.result
 */
interface Result {
    /**
     * @description 风险识别结果（切记需要 `JSON.parse` 一下）
     * 内部值如下：
     * - `riskinfo_anticheat_common` 类型 `string`，风险评级结果。
     * - `riskinfo_anticheat_common_infocode` 类型 `string`，风险评级说明。
     *
     * - 例如：`{ "riskinfo_anticheat_common": "rank3", "riskinfo_anticheat_common_infocode": "171" }`。
     *
     * `riskinfo_anticheat_common` 的有效值如下：
     * - `rank0` 信息不足/参数有误
     * - `rank1` 表示用户作弊风险为低
     * - `rank2` 表示用户作弊风险为中
     * - `rank3` 表示用户作弊风险为高
     *
     * `riskinfo_anticheat_common_infocode` 的有效值如下：
     * - `171` 作弊风险
     */
    riskResult: string;
    /**
     * @description 风险信息描述。
     * - 例如：`{ "rank0": "等级0" }`
     */
    riskResultDesc: string;
    /**
     * @description 业务唯一识别码，用户标识请求信息。
     */
    uniqueId: string;
}
export {};
//# sourceMappingURL=cheat.d.ts.map