import { API, APIDefaultErrorResponse, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 网关请求
 */
export interface APIExport<S> {
    [API.rpc]: rpc;
    [API.sendMtop]: sendMtop;
    [API.openRpc]: openRpc;
}
/**
 * @description 小程序 RPC 请求。
 */
interface rpc {
    type: APIType.Async;
    request: {
        /**
         * @description rpc 服务名称。
         */
        operationType: string;
        /**
         * @description 请求参数。
         */
        requestData: unknown[];
        /**
         * @description 请求头。
         */
        headers?: Record<string, string>;
        /**
         * @description 网关地址。
         */
        gateway?: string;
        /**
         * @description 是否支持 request gzip 压缩。
         * @default true
         */
        compress?: boolean;
        /**
         * @description rpc 网关被限流时是否禁止自动弹出统一限流弹窗。
         * @default false
         */
        disableLimitView?: boolean;
        /**
         * @description rpc 超市时间。**警告：尽量不要自定义，否则容易出现服务端有成功返回数据，但客户端已经超时回调报错给前端的情况，容易导致重复发起创建订单之类的严重问题**。
         * @default iOS端 wifi 环境 20s，其它环境 30s。Android端 wifi/4g 环境 12s 到 42s 之间。其它环境 32s 到 60s 之间。
         */
        timeout?: number;
        /**
         * @description 获取 rpc 响应头（注意，如果设置为true的话，响应数据会多一层嵌套，可用于数据回流上报获取 traceId/entityId 场景，需要开启 MMTP 开关）
         * @default false
         */
        getResponse?: boolean;
    };
    response: Record<string, unknown>;
    error: RPCError;
}
interface RPCError extends APIDefaultErrorResponse {
    /**
     * @description 错误码。
     */
    error: ERPCErrorCode;
}
/**
 * @description 淘宝 mtop 三方接口。
 */
interface sendMtop {
    type: APIType.Async;
    request: {
        /**
         * @description API 名称。
         */
        api: string;
        /**
         * @description API 版本。
         */
        v: string;
        /**
         * @description 请求参数。
         */
        data?: Record<string, unknown>;
        /**
         * @description 返回的数据类型。
         */
        dataType?: string;
        /**
         * @description 是否需要登陆处理。
         */
        needLogin?: boolean;
    };
    response: Record<string, unknown>;
}
/**
 * @description 公开的受限 rpc 接口。
 */
interface openRpc {
    type: APIType.Async;
    request: void;
}
declare const enum ERPCErrorCode {
    /**
     * @description 成功
     */
    '_1000' = 1000,
    /**
     * @description 未知错误
     */
    '_0' = 0,
    /**
     * @description 客户端找不到通讯对象
     */
    '_1' = 1,
    /**
     * @description 客户端没有网络（jsapi做了转换，返回10）
     */
    '_2' = 2,
    /**
     * @description 客户端证书错误
     */
    '_3' = 3,
    /**
     * @description 客户端网络连接超时
     */
    '_4' = 4,
    /**
     * @description 客户端网络速度过慢
     */
    '_5' = 5,
    /**
     * @description 客户端请求服务端没返回
     */
    '_6' = 6,
    /**
     * @description 客户端网络IO错误
     */
    '_7' = 7,
    /**
     * @description 客户端网络请求调度错误
     */
    '_8' = 8,
    /**
     * @description 客户端处理错误
     */
    '_9' = 9,
    /**
     * @description 客户端数据反序列化错误,服务端数据格式有误
     */
    '_10' = 10,
    /**
     * @description 客户端登录失败
     */
    '_11' = 11,
    /**
     * @description 客户端登录账号切换
     */
    '_12' = 12,
    /**
     * @description 请求中断错误，例如线程中断时网络请求会被中断
     */
    '_13' = 13,
    /**
     * @description 客户端网络缓存错误
     */
    '_14' = 14,
    /**
     * @description 客户端网络授权错误
     */
    '_15' = 15,
    /**
     * @description DNS解析错误
     */
    '_16' = 16,
    /**
     * @description operationType 不在白名单
     */
    '_17' = 17,
    /**
     * @description 拒绝访问
     */
    '_1001' = 1001,
    /**
     * @description 调用次数超过限制:系统繁忙，请稍后再试。
     */
    '_1002' = 1002,
    /**
     * @description 登录超时，请重新登录:登录超时，请重新登录
     */
    '_2000' = 2000,
    /**
     * @description 缺少操作类型或者此操作类型不支持
     */
    '_3000' = 3000,
    /**
     * @description 请求数据为空:系统繁忙，请稍后再试
     */
    '_3001' = 3001,
    /**
     * @description 数据格式有误
     */
    '_3002' = 3002,
    /**
     * @description 服务请求超时，请稍后再试
     */
    '_4001' = 4001,
    /**
     * @description 远程调用业务系统异常:网络繁忙，请稍后再试
     */
    '_4002' = 4002,
    /**
     * @description 创建远程调用代理失败:网络繁忙，请稍后再试
     */
    '_4003' = 4003,
    /**
     * @description 未知错误:抱歉，暂时无法操作，请稍后再试
     */
    '_5000' = 5000,
    /**
     * @description RPC-服务找不到
     */
    '_6000' = 6000,
    /**
     * @description RPC-目标方法找不到
     */
    '_6001' = 6001,
    /**
     * @description RPC-参数数目不正确
     */
    '_6002' = 6002,
    /**
     * @description RPC-目标方法不可访问
     */
    '_6003' = 6003,
    /**
     * @description RPC-JSON解析异常
     */
    '_6004' = 6004,
    /**
     * @description RPC-调用目标方法时参数不合法
     */
    '_6005' = 6005,
    /**
     * @description RPC-业务异常
     */
    '_6666' = 6666,
    /**
     * @description 没有设置公钥
     */
    '_7000' = 7000,
    /**
     * @description 验签的参数不够
     */
    '_7001' = 7001,
    /**
     * @description 验签失败
     */
    '_7002' = 7002,
    /**
     * @description 验签时间戳校验失败
     */
    '_7003' = 7003,
    /**
     * @description 验签RPC接口 operationType参数为空
     */
    '_7004' = 7004,
    /**
     * @description productId参数为空
     */
    '_7005' = 7005,
    /**
     * @description 验签接口 did参数为空
     */
    '_7006' = 7006,
    /**
     * @description 验签接口 请求发送时间参数t为空
     */
    '_7007' = 7007,
    /**
     * @description 验签接口 IMEI(客户端设备标识)参数为空
     */
    '_7008' = 7008,
    /**
     * @description 验签接口 IMSI(客户端用户标识)为空
     */
    '_7009' = 7009,
    /**
     * @description 验签接口 API版本号为空
     */
    '_7010' = 7010,
    /**
     * @description 验签接口 用户没有权限
     */
    '_7011' = 7011,
    /**
     * @description 验签接口 RPC没有对外开放
     */
    '_7012' = 7012,
    /**
     * @description 验签接口 productId没有注册或者获取密钥为空
     */
    '_7013' = 7013,
    /**
     * @description 验签接口 加签数据为空
     */
    '_7014' = 7014,
    /**
     * @description 验签接口 签约无效
     */
    '_7015' = 7015,
    /**
     * @description 验签接口 请求登录RPC传入sid为空
     */
    '_7016' = 7016,
    /**
     * @description 验签接口 请求登录RPC传入sid无效
     */
    '_7017' = 7017,
    /**
     * @description 验签接口 请求登录RPC传入token无效
     */
    '_7018' = 7018,
    /**
     * @description 验签接口 请求登录RPC 获取alipayuserid为空
     */
    '_7019' = 7019,
    /**
     * @description etag：响应数据没有变化
     */
    '_8001' = 8001
}
export {};
//# sourceMappingURL=gateway.d.ts.map