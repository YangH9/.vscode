import { API, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 内容安全
 */
export interface APIExport<S> {
    [API.textRiskIdentification]: textRiskIdentification;
    [API.ap$textRiskIdentification]: ap$textRiskIdentification;
    [API.ap$imgRisk]: imgRisk;
    [API.ap$imgRiskCallback]: imgRiskCallback;
}
/**
 * @description 对用户在使用小程序过程产生用户原创内容（UGC）进行风险识别。
 */
interface textRiskIdentification {
    type: APIType.Async;
    request: {
        /**
         * @description 需要进行风险识别的文本内容。
         */
        content: string;
        /**
         * @description 识别类型。
         */
        type: `${ETextRiskIdentificationType}`[];
    };
    response: {
        result: ETextRiskIdentificationResult;
    };
}
declare const enum ETextRiskIdentificationType {
    /**
     * @description 自定义敏感词。
     */
    keyword = "keyword",
    /**
     * @description 广告。
     */
    '_0' = "0",
    /**
     * @description 涉政。
     */
    '_1' = "1",
    /**
     * @description 涉黄。
     */
    '_2' = "2",
    /**
     * @description 低俗辱骂。
     */
    '_3' = "3"
}
/**
 * @name textRiskIdentification.success.result
 */
interface ETextRiskIdentificationResult {
    /**
     * @description 目标内容文本识别到的类型。
     */
    type: ETextRiskIdentificationType;
    /**
     * @description 仅当识别命中了 `type` 为 `keyword` 时，才会返回该字段。
     */
    hitKeywords?: string[];
    /**
     * @description 识别命中得分，最高分为 `100` 分。仅当识别没有命中 `keyword`，但入参中包含了 `广告` 或 `涉政` 或 `涉黄` 时，才会返回该字段。
     */
    score?: string;
}
interface ap$textRiskIdentification {
    type: APIType.Alias;
    alias: API.textRiskIdentification;
}
/**
 * @description 图片风险任务提交接口，用于识别图片是否有色情、违禁违法等内容。
 * - 有关图片内容安全的产品和接入介绍，请参见 [图片内容安全](https://opendocs.alipay.com/mini/introduce/img_risk)。
 * - 图片必须是 **公网可以访问的图片**，如果有 **加密** 或者 **限权**，则无法返回结果。
 *
 * **调用流程**：
 * - 调用 `imgRisk` 提交了一次图片风险任务查询。
 * - `imgRisk` 返回成功后，调用 `imgRiskCallback` 进行风险任务结果查询。
 *
 * **注意**：`imgRisk` 接口返回的 `riskResult` 内的 `apply_id` 需要透传给 `imgRiskCallback` 接口内的 `bizContext 参数内的 `apply_id`。
 */
interface imgRisk {
    type: APIType.Async;
    request: {
        /**
         * @description 合作者身份 ID。即商户与支付宝签约后，商户获得的支付宝商户唯一识别码。
         */
        pid: string;
        /**
         * @description 小程序的 APPID。
         */
        appId: string;
        /**
         * @description 需要识别的业务参数。
         */
        bizContext: ImgRiskBizContext;
    };
    response: {
        /**
         * @description 图片风险识别的任务结果，内部包含任务id（切记先 JSON.parse 一下）。
         * 反序列化后的对象结构如下：
         * - `apply_id` 代表任务id，用于调用 `imgRiskCallback` 进行查询结果时使用。
         */
        riskResult: string;
        /**
         * @description 风险识别结果描述。
         */
        riskResultDesc: string;
        /**
         * @description 是否调用成功。
         */
        success: boolean;
        /**
         * @description 业务唯一识别码。
         */
        uniqueId: string;
    };
}
/**
 * @name imgRisk.bizContext
 */
interface ImgRiskBizContext {
    /**
     * @description 风险类型，固定传 `img_risk`。
     */
    'risk_type': string;
    /**
     * @description 需要验证的 `图片 URL`，最大长度 `128`。
     */
    content: string;
}
/**
 * @description 用于查询图片的风险识别结果。
 */
interface imgRiskCallback {
    type: APIType.Async;
    request: {
        /**
         * @description 合作者身份 ID。即商户与支付宝签约后，商户获得的支付宝商户唯一识别码。
         */
        pid: string;
        /**
         * @description 小程序的 APPID。
         */
        appId: string;
        /**
         * @description 需要识别的业务参数。
         */
        bizContext: ImgRiskCallbackBizContext;
    };
    response: {
        /**
         * @description 图片风险识别的任务结果（切记先 `JSON.parse` 一下）。
         * `JSON.parse` 后的对象结构如下：
         * - `action`，存在以下两种值 `REJECTED`、`PASSED`。
         * `REJECTED` 代表此图片风险程度高，不能发布展示。
         * `PASSED` 代表此图片的风险程度低，可以发布展示。
         */
        riskResult: string;
        /**
         * @description 风险识别结果描述。
         */
        riskResultDesc: string;
        /**
         * @description 是否调用成功。
         */
        success: boolean;
        /**
         * @description 业务唯一识别码。
         */
        uniqueId: string;
    };
}
/**
 * @name imgRiskCallback.bizContext
 */
interface ImgRiskCallbackBizContext {
    /**
     * @description 风险类型。固定传 `img_risk_result`。
     */
    'risk_type': string;
    /**
     * @description 需要查询图片的任务 ID，即调用 `imgRisk` 返回的 `riskResult` 内的 `apply_id`。
     */
    'apply_id': string;
}
export {};
//# sourceMappingURL=content.d.ts.map