import { API, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 电源
 */
export interface APIExport<S> {
    [API.getBatteryInfo]: getBatteryInfo;
    [API.getBatteryInfoSync]: getBatteryInfoSync;
    [API.onLowPowerWarning]: onLowPowerWarning;
    [API.offLowPowerWarning]: offLowPowerWarning;
    [API.isLowPowerMode]: isLowPowerMode;
}
/**
 * @description 获取电量的异步接口。无需传入参，异步获取当前设备的电量和充电状态。
 */
interface getBatteryInfo {
    type: APIType.Async;
    native: 'getBatteryInfo';
    request: void;
    response: batteryInfo;
}
/**
 * @description 获取电量的同步接口。无需传入参，同步获取当前设备的电量和充电状态。
 */
interface getBatteryInfoSync {
    type: APIType.Sync;
    native: 'getBatteryInfo';
    request: void;
    response: batteryInfo;
}
interface batteryInfo {
    /**
     * @description 当前设备电量。
     */
    level: number;
    /**
     * @description 当前设备是否充电中。
     */
    isCharging: boolean;
}
/**
 * @description 开始监听设备是否进入低电量模式。
 */
interface onLowPowerWarning {
    type: APIType.Event;
    event: {
        /**
         * @description 设备是否是低电量模式。
         */
        isLowPowerMode: boolean;
    };
}
/**
 * @description 停止监听设备是否进入低电量模式事件。
 */
interface offLowPowerWarning {
    type: APIType.Fn;
    fn: (callback?: Function) => void;
}
/**
 * @description 判断设备是否处于低电量模式。
 */
interface isLowPowerMode {
    type: APIType.Async;
    native: 'isLowPowerMode';
    request: void;
    response: {
        /**
         * @description 设备是否是低电量模式。
         */
        isLowPowerMode: boolean;
    };
}
export {};
//# sourceMappingURL=battery.d.ts.map