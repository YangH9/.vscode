import { API, APIType } from '../../type';
export interface TypeExport<S> {
}
/**
 * @name 内存
 */
export interface APIExport<S> {
    [API.onMemoryWarning]: onMemoryWarning;
    [API.offMemoryWarning]: offMemoryWarning;
}
/**
 * @description 开始监听内存不足的告警事件。
 * - Android 有告警等级划分：`10` 代表 `TRIM_MEMORY_RUNNING_LOW`，`15` 代表 `TRIM_MEMORY_RUNNING_CRITICAL`。
 * - iOS 无等级划分。
 */
interface onMemoryWarning {
    type: APIType.Event;
    event: {
        /**
         * @description 系统内存的告警等级，仅 `Android` 有此字段。
         */
        level?: number;
    };
}
/**
 * @description 停止监听内存不足的告警事件。
 */
interface offMemoryWarning {
    type: APIType.Fn;
    /**
     * @param callback
     * - 不传递 `callback` 值，则会移除监听**所有**的事件回调。
     * - 传递 `callback` 值，只移除**对应**的 `callback` 事件。
     */
    fn: (callback?: Function) => void;
}
export {};
//# sourceMappingURL=memory.d.ts.map