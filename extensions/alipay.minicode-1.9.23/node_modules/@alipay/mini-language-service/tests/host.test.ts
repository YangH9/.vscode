import {
  createBaseLanguageContext,
  createProgram,
  wrapProgram,
} from '../src/helpers';
import * as ts from 'typescript/lib/tsserverlibrary';
import { createMiniLanguageServiceContextUtils } from '../src/context';

describe('host can work', () => {
  const program = createProgram(
    ts,
    ['/Users/artin/0Ant/api-demo/master/src/page/API/favorite/favorite.js'],
    '/Users/artin/0Ant/api-demo/master/src'
  );
  program.emit();

  const host = wrapProgram(ts, program);

  const context = createBaseLanguageContext(ts, host);
  const langSvc = ts.createLanguageService(
    context.typescriptLanguageServiceHost,
    context.documentRegistry
  );
  const lsContext = createMiniLanguageServiceContextUtils(
    ts,
    {
      languageService: langSvc,
      languageServiceHost: context.typescriptLanguageServiceHost,
      project: context.typescriptLanguageServiceHost as any,
    } as any,
    console,
    {
      isInsideUser: false,
    }
  );

  afterAll(() => {
    lsContext.dispose();
  });
  it('can get page by path', () => {
    const result = lsContext.configCenter.getPageByPath(
      '/Users/artin/0Ant/api-demo/master/src/page/API/favorite/favorite.js'
    );
    console.log(`ðŸš€ ~ file: host.test.ts ~ line 36 ~ it ~ result`, result);
  });
  it('can resolve relative path', () => {
    const result = lsContext.configCenter.resolveRouterUrl(
      '/Users/artin/0Ant/api-demo/master/src/page/API/favorite/favorite.js',
      '../events/events'
    );
    console.log(`ðŸš€ ~ file: host.test.ts ~ line 40 ~ it ~ result`, result);
  });
});
