import { IMiniLanguageServiceContext, ITSUtils, ILogger } from '../types';
import type * as ts_module from 'typescript/lib/tsserverlibrary';
import { CanIUseHelper } from '../canIUse';
import { IAPIParams } from '@alipay/mini-extensions-shared/lib/data/jsapi';
import { NativeAPI as apiMeta } from '@alipay/mini-extensions-shared/lib/data/NativeAPI';
export declare class GetCompletionsAtPositionProvider {
    private context;
    ts: typeof ts_module;
    tsUtils: ITSUtils;
    logger: ILogger;
    languageService: ts_module.LanguageService;
    apiMeta: typeof apiMeta;
    canIUseHelper: CanIUseHelper;
    constructor(context: IMiniLanguageServiceContext);
    dispose(): void;
    wrapCompletionItem(node: ts.StringLiteral | ts.ObjectLiteralElement, text: string): ts_module.CompletionEntry;
    wrapCanIUseReturnValue(node: ts.StringLiteral | ts.ObjectLiteralElement, text: string): {
        kind: ts_module.ScriptElementKind.constElement | ts_module.ScriptElementKind.string;
        sortText: string;
        name: string;
        insertText: string;
        replacementSpan: {
            start: number;
            length: number;
        };
    };
    /**
     * 获取现有的 api 列表
     * 提供给 my.call 补全
     * @returns
     */
    getApiBriefList(): typeof apiMeta;
    updateAPIMeta(storagePath: string): void;
    /**
     * 给 my.call 的入参提供自动补全
     */
    getNativeApiInputParamsList(apiName: string): IAPIParams[];
    getCompletionEntry(fileName: string, position: number, options: ts_module.GetCompletionsAtPositionOptions | undefined): ts_module.CompletionEntry[];
    getCompletionsAtPosition(fileName: string, position: number, options: ts_module.GetCompletionsAtPositionOptions | undefined): ReturnType<ts_module.LanguageService['getCompletionsAtPosition']>;
    updateStoragePath(globalStoragePath: string): void;
}
