/**
 * Module dependencies
 */
import { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';
export declare type BundleAnalyzerOptions = BundleAnalyzerPlugin.Options;
/**
 * Expose `IVnaillaBuildArgs`
 *
 * @description 此 interface 声明了 cube-build 对上层透出的可用额外参数
 */
export interface IVnaillaBuildArgs {
    /**
     * Enable `webpack-bundle-analyzer`.
     */
    bundle?: boolean;
    /**
     * Options of `webpack-bundle-analyzer`.
     */
    ['bundle-config-json']?: string;
    /**
     * Enable typescript
     */
    typescript?: boolean;
    /**
     * Enable less
     */
    less?: boolean;
    /**
     * Enable *.less
     */
    dotless?: boolean;
    /**
     * Pass build plugin
     *
     * TODO 由于 minicode-compile 没有提供通用的序列化 cube-build 参数的方式，buildPlugin: true 将会序列成 --buildPlugin 导致 cube-build 无法识别
     * 因此此处参数采用了 CLI 参数去掉的命名
     * update: 这个参数应该已经不再使用了
     */
    ['build-plugin']?: string;
    /**
     * extra unknown cli args
     */
    [key: string]: string | boolean;
}
/**
 * Type of cube-build options enhancer
 */
export declare type GetVanillaBuildArgs = () => Promise<IVnaillaBuildArgs>;
export declare type GenerateRuntimeEnhancerCode = () => Promise<void>;
export declare type SetVanillaBuildArgs = (args: IVnaillaBuildArgs) => void;
//# sourceMappingURL=vanilla-build.d.ts.map