/**
 * Module dependencies
 */
import { GetVanillaBuildArgs, GenerateRuntimeEnhancerCode } from '../build';
/**
 * Expose `IMiniProgramFallbackCompilerOptions`
 */
export interface IMiniProgramFallbackCompilerOptions {
    /**
     * input directory, relative path, e.g. 'src'.
     */
    input?: string;
    /**
     * output directory, relative path, e.g. 'es'.
     */
    output?: string;
    /**
     * cwd.
     */
    cwd?: string;
    /**
     * enable watch.
     */
    watch?: boolean;
    /**
     * get vanilla build args.
     */
    getVanillaBuildArgs?: GetVanillaBuildArgs;
    /**
     * generate runtime enhancer
     */
    generateRuntimeEnhancerCode?: GenerateRuntimeEnhancerCode;
    /**
     * build preset, defaults to app.
     */
    preset?: 'app' | 'component' | 'app-legacy';
    /**
     * speicify transpiler, if you want use tsc to compile js,
     * you need to set `allowJs: true` in tsconfig.json.
     */
    transpiler?: 'babel' | 'tsc' | 'tsc-babel';
    /**
     * enable ES5 compatibility check.
     */
    es5Check?: boolean;
    /**
     * remove transpilation comments or not.
     */
    removeTranspilationComments?: boolean;
}
export interface IMiniProgramFallbackCompiler {
    runBuild(): Promise<void>;
}
/**
 * Expose `MiniProgramFallbackCompilerCreator`
 */
export declare type MiniProgramFallbackCompilerCreator = (options: IMiniProgramFallbackCompilerOptions) => IMiniProgramFallbackCompiler;
//# sourceMappingURL=index.d.ts.map