import { IAppxWindowConfig, PartialRecord } from '../shared';
export interface IMiniPluginConfig {
    /**
     * 插件对应的 pluginId
     */
    provider: string;
    /**
     * 插件版本。
     *
     * 目前只支持设置 * ，客户端会自动选择插件版本。
     */
    version: string;
    lazy?: boolean;
    /**
     * 从[基础库 2.7.7](https://opendocs.alipay.com/mini/framework/lib-upgrade-v2) 起，宿主小程序可以导出一些内容，供插件获取。具体来说，即在声明使用插件时，可以通过该字段来指定宿主的一个文件，则该文件导出的内容可以被插件用全局函数 `requireMiniProgram` 获得。
     *
     * 详细信息可见：[插件使用 - 导出到插件](https://opendocs.alipay.com/mini/plugin/plugin-usage#%E5%AF%BC%E5%87%BA%E5%88%B0%E6%8F%92%E4%BB%B6)
     */
    export?: string;
}
export interface ISubPackageConfig {
    /**
     * 分包根目录
     */
    root: string;
    /**
     * 分包页面路径
     */
    pages: string[];
}
export interface IBehavior {
    /**
     * 使用小程序默认分享功能时（即不显式设置 [Page.onShareAppMessage](https://opendocs.alipay.com/mini/framework/page-detail#onShareAppMessage(options%3A%20Object))），当设置此字段后，会使客户端生成的用于分享的 scheme 带上当前用户打开的页面所携带的 query 参数。
     * 基础库 2.7.10 及以上开始支持，同时需使用 IDE 2.7.0 及以上版本进行构建。
     * @default "appendQuery"
     */
    shareAppMessage?: string;
    /**
     * 小程序在解析全局参数、页面参数时默认会对键/值做 `encodeURIComponent`。当设置为 disable 后，则不再对键/值做 `encodeURIComponent`，解析规则详情可查看 [小程序全局/页面参数设置以及解析细节](https://opendocs.alipay.com/mini/03durs)，基础库 2.7.19 及以上开始支持，同时需使用 IDE 3.0.0 及以上版本进行构建。
     * @default "disable"
     */
    decodeQuery?: string;
}
/**
 * 请参考: https://opendocs.alipay.com/mini/framework/app-json
 */
export interface IAppJson {
    /**
     * 小程序应用的所有页面路径
     */
    pages?: string[];
    /**
     * 设置小程序所有页面的的默认窗口表现
     */
    window?: IAppxWindowConfig;
    /**
     * 设置底部 TabBar 的表现
     *
     * [tabBar 使用文档](https://opendocs.alipay.com/mini/00prvl)
     */
    tabBar?: ITabBarJson;
    /**
     * 分包设置
     */
    subPackages?: ISubPackageConfig[];
    /**
     * 声明使用 [动态插件](https://opendocs.alipay.com/mini/plugin/plugin-usage#动态加载)
     */
    useDynamicPlugins?: boolean;
    /**
     * 声明使用 [静态插件](https://opendocs.alipay.com/mini/plugin/plugin-usage#静态声明)
     */
    plugins?: Record<string, IMiniPluginConfig>;
    /**
     * @deprecated
     *
     * use mini.project.json include instead!
     */
    includeFiles?: string[];
    /**
     * 开启时，将会共享多个分包间相同代码模块
     */
    subPackageBuildType?: 'shared';
    snapshot?: boolean | {
        clearSnapshotWhenAppUpdate: boolean;
    };
    /**
     * 小程序接口权限相关设置
     */
    permission?: PartialRecord<'scope.userLocation' | 'scope.album' | 'scope.writePhotosAlbum' | 'scope.record' | 'scope.camera' | string, {
        desc: string;
    }>;
    behavior?: IBehavior;
    /**
     * 注册 [Worker](https://opendocs.alipay.com/mini/api/createworker) 脚本地址
     */
    workers?: string[];
    /**
     * 懒加载启动模式，配置后仅执行当前页面必须的相关脚本
     */
    lazyCodeLoading?: 'requiredComponents';
    /**
     * 分包预下载配置
     */
    preloadRule?: {
        [pagePath: string]: {
            /**
             * 进入页面后预下载的分包的 root
             */
            packages: string[];
            /**
             * 进入页面后预下载的插件的别名
             */
            plugins?: string[];
            /**
             * 在指定网络下进行预下载
             * - "all" 不限网络
             * - "wifi" 仅 WiFi 下预下载
             * @default "all"
             */
            network?: 'all' | 'wifi';
        };
    };
    /**
     * 默认启动路径（首页）
     */
    entryPagePath?: string;
    /**
     * 设置全局自定义组件声明
     */
    usingComponents?: Record<string, string>;
}
export interface IAppConfigJson {
    /**
     * 小程序应用的所有页面路径
     */
    pages?: string[];
    entryPagePath?: string;
}
export interface ITabBarItem {
    /**
     * 非选中状态图标路径
     */
    icon?: string;
    /**
     * 选中状态图标路径(高亮)
     */
    activeIcon?: string;
    /**
     * 名称
     */
    name?: string;
    tag?: string;
    url?: string;
    launchParamsTag?: string;
    /**
     * 页面路径，必须在 pages 中能查找到（不允许在 分包路径 中）
     */
    pagePath: string;
}
export interface ITabBarJson {
    /**
     * 启用自定义 TabBar
     */
    customize?: boolean;
    /**
     * 文字颜色
     */
    textColor?: string;
    /**
     * 选中文字颜色
     */
    selectedColor?: string;
    /**
     * 背景色
     */
    backgroundColor?: string;
    /**
     * 每个 Tab 配置
     */
    items: ITabBarItem[];
    disableOnInit?: boolean;
}
//# sourceMappingURL=app_json.d.ts.map