{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Git",
			"description": "Git 源代码管理集成",
			"command.setLogLevel": "设置日志级别...",
			"command.clone": "克隆",
			"command.cloneRecursive": "克隆(递归)",
			"command.init": "初始化存储库",
			"command.openRepository": "打开存储库",
			"command.close": "关闭存储库",
			"command.refresh": "刷新",
			"command.openChange": "打开更改",
			"command.openAllChanges": "打开所有更改",
			"command.openFile": "打开文件",
			"command.openHEADFile": "打开文件 (HEAD)",
			"command.stage": "暂存更改",
			"command.stageAll": "暂存所有更改",
			"command.stageAllTracked": "暂存所有跟踪的更改",
			"command.stageAllUntracked": "暂存所有未跟踪的更改",
			"command.stageAllMerge": "暂存所有合并更改",
			"command.stageSelectedRanges": "暂存所选范围",
			"command.revertSelectedRanges": "还原所选更改",
			"command.stageChange": "暂存更改",
			"command.revertChange": "还原更改",
			"command.unstage": "取消暂存更改",
			"command.unstageAll": "取消暂存所有更改",
			"command.unstageSelectedRanges": "取消暂存所选范围",
			"command.rename": "重命名",
			"command.clean": "放弃更改",
			"command.cleanAll": "放弃所有更改",
			"command.cleanAllTracked": "放弃所有跟踪的更改",
			"command.cleanAllUntracked": "放弃所有未跟踪的更改",
			"command.commit": "提交",
			"command.commitStaged": "提交已暂存文件",
			"command.commitEmpty": "创建空提交",
			"command.commitStagedSigned": "提交已暂存文件(已署名)",
			"command.commitStagedAmend": "提交已暂存文件(修改)",
			"command.commitAll": "全部提交",
			"command.commitAllSigned": "全部提交(已署名)",
			"command.commitAllAmend": "全部提交(修改)",
			"command.commitNoVerify": "提交(不验证)",
			"command.commitStagedNoVerify": "提交已暂存内容(不验证)",
			"command.commitEmptyNoVerify": "空提交(不验证)",
			"command.commitStagedSignedNoVerify": "提交已暂存内容(已签收，不验证)",
			"command.commitStagedAmendNoVerify": "提交已暂存内容(修正，不验证)",
			"command.commitAllNoVerify": "全部提交(不验证)",
			"command.commitAllSignedNoVerify": "全部提交(已签收，不验证)",
			"command.commitAllAmendNoVerify": "全部提交(修正，不验证)",
			"command.restoreCommitTemplate": "还原提交模板",
			"command.undoCommit": "撤消上次提交",
			"command.checkout": "签出到...",
			"command.checkoutDetached": "签出到(已分离)…",
			"command.branch": "创建分支...",
			"command.branchFrom": "从现有来源创建新的分支...",
			"command.deleteBranch": "删除分支...",
			"command.renameBranch": "重命名分支...",
			"command.cherryPick": "挑拣…",
			"command.merge": "合并分支...",
			"command.rebase": "变基分支…",
			"command.createTag": "创建标记",
			"command.deleteTag": "删除标签",
			"command.fetch": "抓取",
			"command.fetchPrune": "获取 (删除)",
			"command.fetchAll": "从所有远程存储库中拉取",
			"command.pull": "拉取",
			"command.pullRebase": "拉取(变基)",
			"command.pullFrom": "拉取自...",
			"command.push": "推送",
			"command.pushForce": "推送(强制)",
			"command.pushTo": "推送到...",
			"command.pushToForce": "推送到...(强制)",
			"command.pushFollowTags": "推送(“关注”标记)",
			"command.pushFollowTagsForce": "推送(“关注”标记，强制)",
			"command.pushTags": "推送标记",
			"command.addRemote": "添加远程存储库…",
			"command.removeRemote": "删除远程存储库",
			"command.sync": "同步",
			"command.syncRebase": "同步(变基)",
			"command.publish": "发布分支...",
			"command.showOutput": "显示 GIT 输出",
			"command.ignore": "添加到 .gitignore",
			"command.revealInExplorer": "在侧边栏中显示",
			"command.rebaseAbort": "中止变基",
			"command.stashIncludeUntracked": "储藏(包含未跟踪)",
			"command.stash": "储藏",
			"command.stashPop": "弹出储藏...",
			"command.stashPopLatest": "弹出最新储藏",
			"command.stashApply": "应用储藏...",
			"command.stashApplyLatest": "应用最新储藏",
			"command.stashDrop": "删除储藏...",
			"command.timelineOpenDiff": "打开更改",
			"command.timelineCopyCommitId": "复制提交 ID",
			"command.timelineCopyCommitMessage": "复制提交消息",
			"command.timelineSelectForCompare": "选择以进行比较",
			"command.timelineCompareWithSelected": "与已选项目进行比较",
			"config.enabled": "是否启用 Git。",
			"config.path": "Git 可执行文件的路径和文件名，例如 \"C:\\Program Files\\Git\\bin\\git.exe\" (Windows)。这也可以是一个包含多个要查找的路径的字符串值数组。",
			"config.autoRepositoryDetection": "配置何时自动检测存储库。",
			"config.autoRepositoryDetection.true": "扫描当前打开文件夹与当前打开文件所在文件夹的子文件夹。",
			"config.autoRepositoryDetection.false": "禁止自动扫描存储库。",
			"config.autoRepositoryDetection.subFolders": "扫描当前打开文件夹的子文件夹。",
			"config.autoRepositoryDetection.openEditors": "扫描当前打开文件的父文件夹。",
			"config.autorefresh": "是否启用自动刷新。",
			"config.autofetch": "若设置为 true，则自动从当前 Git 存储库的默认远程库提取提交。若设置为“全部”，则从所有远程库进行提取。",
			"config.autofetchPeriod": "在启用 \"git.autofetch\" 情况下每次自动 git fetch 之间的间隔时间(以秒为单位)。",
			"config.confirmSync": "同步 Git 存储库前请先进行确认。",
			"config.countBadge": "控制 Git 计数徽章。",
			"config.countBadge.all": "对所有更改计数。",
			"config.countBadge.tracked": "仅对跟踪的更改计数。",
			"config.countBadge.off": "关闭计数器。",
			"config.checkoutType": "控制在运行“签出到…”时列出的 git 参考类型。",
			"config.checkoutType.local": "本地分支",
			"config.checkoutType.tags": "标记",
			"config.checkoutType.remote": "远程分支",
			"config.branchValidationRegex": "用于验证新分支名称的正则表达式。",
			"config.branchWhitespaceChar": "在新分支名称中替换空白字符的字符。",
			"config.ignoreLegacyWarning": "忽略“旧版 Git”警告。",
			"config.ignoreMissingGitWarning": "忽略“缺失 Git”的警告。",
			"config.ignoreWindowsGit27Warning": "如果 Windows 上安装了 Git 2.25 - 2.26，则忽略警告。",
			"config.ignoreLimitWarning": "忽略“存储库中存在大量更改”的警告。",
			"config.ignoreRebaseWarning": "忽略拉取时发出的分支似乎已变基的警告。",
			"config.defaultCloneDirectory": "克隆 Git 存储库的默认位置。",
			"config.enableSmartCommit": "在没有暂存的更改时提交所有更改。",
			"config.smartCommitChanges": "控制哪些更改由Smart Commit自动暂存。",
			"config.smartCommitChanges.all": "自动暂存所有更改。",
			"config.smartCommitChanges.tracked": "仅自动暂存跟踪的更改。",
			"config.suggestSmartCommit": "建议启用智能提交(在无暂存更改时提交所有更改)。",
			"config.enableCommitSigning": "使用 GPG 或 x.509 启用提交签名。",
			"config.discardAllScope": "控制运行“放弃所有更改”命令时放弃的更改类型。\"all\" 放弃所有更改。\"tracked\" 只放弃跟踪的文件。\"prompt\" 表示在每次运行此操作时显示提示对话框。",
			"config.decorations.enabled": "控制 Git 是否在资源管理器和“打开编辑器”视图中添加颜色和小标。",
			"config.enableStatusBarSync": "控制Git Sync命令是否出现在状态栏中。",
			"config.followTagsWhenSync": "遵循“运行同步命令时推送所有标记”。",
			"config.promptToSaveFilesBeforeStash": "控制 Git 是否在储藏更改之前检查未保存的文件。",
			"config.promptToSaveFilesBeforeStash.always": "检查是否有任何未保存的文件。",
			"config.promptToSaveFilesBeforeStash.staged": "只检查未保存的已暂存文件。",
			"config.promptToSaveFilesBeforeStash.never": "禁用此检查。",
			"config.promptToSaveFilesBeforeCommit": "控制 Git 是否在提交之前检查未保存的文件。",
			"config.promptToSaveFilesBeforeCommit.always": "检查是否有任何未保存的文件。",
			"config.promptToSaveFilesBeforeCommit.staged": "只检查未保存的已暂存文件。",
			"config.promptToSaveFilesBeforeCommit.never": "禁用此检查。",
			"config.postCommitCommand": "成功提交后运行 git 命令。",
			"config.postCommitCommand.none": "提交后不要运行任何命令。",
			"config.postCommitCommand.push": "成功提交后运行'Git Push'。",
			"config.postCommitCommand.sync": "成功提交后运行'Git Sync'。",
			"config.openAfterClone": "控制是否在克隆后自动打开存储库。",
			"config.openAfterClone.always": "始终在当前窗口中打开。",
			"config.openAfterClone.alwaysNewWindow": "始终在新窗口中打开。",
			"config.openAfterClone.whenNoFolderOpen": "只有在没有打开任何文件夹时，才在当前窗口中打开。",
			"config.openAfterClone.prompt": "始终提示操作。",
			"config.showInlineOpenFileAction": "控制是否在 Git 更改视图中显示内联“打开文件”操作。",
			"config.showPushSuccessNotification": "控制在推送成功时是否显示通知。",
			"config.inputValidation": "控制何时显示提交消息输入验证。",
			"config.inputValidationLength": "控制显示提交消息长度警告的长度阈值。",
			"config.inputValidationSubjectLength": "控制显示警告的提交消息主题长度阈值。请取消设置它以继承 \"config.inputValidationLength\" 的值。",
			"config.detectSubmodules": "控制是否自动检测 Git 子模块。",
			"config.detectSubmodulesLimit": "控制可检测到的 Git 子模块的限制。",
			"config.alwaysShowStagedChangesResourceGroup": "始终显示“暂存的更改”资源组。",
			"config.alwaysSignOff": "控制所有提交的 signoff 标志。",
			"config.ignoreSubmodules": "忽略对文件树中子模块的修改。",
			"config.ignoredRepositories": "要忽略的 Git 存储库列表。",
			"config.scanRepositories": "在其中搜索 Git 存储库的路径的列表。",
			"config.showProgress": "控制 Git 操作是否显示进度提示。",
			"config.rebaseWhenSync": "在运行“同步”命令时，强制 Git 使用“变基”。",
			"config.confirmEmptyCommits": "始终确认为 \"Git: Commit Empty\" 命令创建空提交。",
			"config.fetchOnPull": "启用后，在拉取时获取所有分支。否则，仅获取当前。",
			"config.pullTags": "拉取时提取所有标签。",
			"config.pruneOnFetch": "提取时修剪。",
			"config.autoStash": "在拉取前暂存所有更改，在成功拉取后还原这些更改。",
			"config.allowForcePush": "控制是否启用强制推送 (不论 force 还是 force-with-lease)。",
			"config.useForcePushWithLease": "控制是否使用更安全的 force-with-lease 进行强制推送。",
			"config.confirmForcePush": "控制在强制推送前是否进行确认。",
			"config.allowNoVerifyCommit": "控制是否允许没有运行 pre-commit 和 commit-msg 挂钩的提交。",
			"config.confirmNoVerifyCommit": "控制是否要求在未验证的情况下提交之前进行确认。",
			"config.openDiffOnClick": "控制单击更改时是否应打开差异编辑器。否则将打开常规编辑器。",
			"config.supportCancellation": "控制在运行同步操作时是否出现通知，允许用户取消操作。",
			"config.branchSortOrder": "控制分支的排列顺序。",
			"config.untrackedChanges": "控制未跟踪的更改的行为。",
			"config.untrackedChanges.mixed": "所有更改，无论是跟踪的还是未跟踪的，都会一起出现并表现出相同的行为。",
			"config.untrackedChanges.separate": "未跟踪的更改单独显示在“源代码管理”视图中。它们也被排除在几个操作之外。",
			"config.untrackedChanges.hidden": "未跟踪的更改被隐藏，并从多个操作中排除。",
			"config.requireGitUserConfig": "控制在是要求进行显式 Git 用户配置，还是允许 Git 在缺少配置时进行猜测。",
			"config.showCommitInput": "控制是否在 Git 源控制面板中显示提交输入。",
			"config.terminalAuthentication": "控制是否使 VS Code 成为集成终端中产生的 git 进程的身份验证处理程序。请注意: 需要重启终端才能选择此设置中的更改。",
			"config.timeline.showAuthor": "控制是否在日程表视图中显示提交作者。",
			"config.timeline.date": "控制在日程表视图中项目使用的日期。",
			"config.timeline.date.committed": "使用提交日期",
			"config.timeline.date.authored": "使用创作日期",
			"config.useCommitInputAsStashMessage": "控制是否将提交输入框中的消息用作默认储藏消息。",
			"submenu.explorer": "Git",
			"submenu.commit": "提交",
			"submenu.commit.amend": "修改",
			"submenu.commit.signoff": "注销",
			"submenu.changes": "更改",
			"submenu.pullpush": "拉取，推送",
			"submenu.branch": "分支",
			"submenu.remotes": "远程",
			"submenu.stash": "存储",
			"submenu.tags": "标记",
			"colors.added": "已添加资源的颜色。",
			"colors.modified": "已修改资源的颜色。",
			"colors.stageModified": "已暂存的已修改资源的颜色。",
			"colors.stageDeleted": "已暂存的已删除资源的颜色。",
			"colors.deleted": "已删除资源的颜色。",
			"colors.renamed": "重命名或复制的资源的颜色。",
			"colors.untracked": "未跟踪资源的颜色。",
			"colors.ignored": "已忽略资源的颜色。",
			"colors.conflict": "存在冲突的资源的颜色。",
			"colors.submodule": "子模块资源的颜色。",
			"view.workbench.scm.missing": "未检测到有效的 git 安装，可在 [git 输出](command:git.showOutput)中找到更多详细信息。\r\n请[安装 git](https://git-scm.com/)，或在[我们的文档](https://aka.ms/vscode-scm)中详细了解如何在 VS Code 中使用 Git 和源代码管理。\r\n如果你使用的是其他版本控制系统，则可[搜索市场](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22)以获取其他扩展。",
			"view.workbench.scm.disabled": "如果要使用 git 功能，请在[设置](command:workbench.action.openSettings?%5B%22git.enabled%22%5D)中启用 git。\r\n要详细了解如何在 VS Code 中使用 Git 和源代码管理，[请阅读我们的文档](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.empty": "为了使用 git 功能，可打开包含 git 存储库的文件夹或从 URL 克隆。\r\n[打开文件夹](command:vscode.openFolder)\r\n[克隆存储库](command:git.clone)\r\n要详细了解如何在 VS Code 中使用 Git 和源代码管理，[请阅读我们的文档](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.folder": "当前打开的文件夹中没有 Git 存储库。可初始化一个存储库，它将实现 Git 提供支持的源代码管理功能。\r\n[初始化存储库](command:git.init?%5Btrue%5D)\r\n要详细了解如何在 VS Code 中使用 Git 和源代码管理，[请阅读我们的文档](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.workspace": "当前打开的工作区中没有任何包含 Git 存储库的文件夹。可初始化某文件夹上的一个存储库，该存储库将实现 Git 提供支持的源代码管理功能。\r\n[初始化存储库](command:git.init)\r\n要详细了解如何在 VS Code 中使用 Git 和源代码管理，[请阅读我们的文档](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.emptyWorkspace": "当前打开的工作区中没有任何包含 git 存储库的文件夹。\r\n[将文件夹添加到工作区](command:workbench.action.addRootFolder)\r\n要详细了解如何在 VS Code 中使用 Git 和源代码管理，[请阅读我们的文档](https://aka.ms/vscode-scm)。",
			"view.workbench.cloneRepository": "可以在本地克隆存储库。\r\n[可控存储库](command:git.clone“启用 git 扩展后立即克隆存储库”)",
			"view.workbench.learnMore": "要详细了解如何在 VS Code 中使用 Git 和源代码管理，[请阅读我们的文档](https://aka.ms/vscode-scm)。"
		},
		"dist/repository": {
			"index modified": "已修改索引",
			"modified": "已修改",
			"index added": "已添加索引",
			"index deleted": "已删除索引",
			"deleted": "已删除",
			"index renamed": "已重命名索引",
			"index copied": "已复制索引",
			"untracked": "未跟踪的",
			"ignored": "已忽略",
			"intent to add": "打算添加",
			"both deleted": "冲突: 两个都已删除",
			"added by us": "冲突: 已由我们添加",
			"deleted by them": "冲突: 已由他们删除",
			"added by them": "冲突: 已由他们添加",
			"deleted by us": "冲突: 已由我们删除",
			"both added": "冲突: 两个都已添加",
			"both modified": "冲突: 两个都已修改",
			"open": "打开",
			"git.title.index": "{0} (索引)",
			"git.title.workingTree": "{0} (工作树)",
			"git.title.deleted": "{0} (已删除)",
			"git.title.theirs": "{0} (他们的)",
			"git.title.ours": "{0} (我们的)",
			"git.title.untracked": "{0} (未跟踪)",
			"commit": "提交",
			"merge changes": "合并更改",
			"staged changes": "暂存的更改",
			"changes": "更改",
			"untracked changes": "未跟踪的更改",
			"push success": "已成功推送。",
			"commit in rebase": "无法在变基过程中修改提交消息。请完成变基操作，并改用交互式变基。",
			"commitMessageWhitespacesOnlyWarning": "当前提交消息仅包含空白字符",
			"commitMessageCountdown": "当前行剩余 {0} 个字符",
			"commitMessageWarning": "当前行比 {1} 超出 {0} 个字符",
			"sync is unpredictable": "正在同步。取消可能会导致存储库出现严重损坏",
			"always pull": "始终拉取",
			"pull": "拉取",
			"dont pull": "不拉取",
			"pull branch maybe rebased": "当前分支“{0}”似乎已变基。确定仍要拉取到其中吗?",
			"pull maybe rebased": "当前分支似乎已变基。确定仍要拉取到其中吗?",
			"huge": "Git 存储库“{0}”中存在大量活动更改，将仅启用部分 Git 功能。",
			"neveragain": "不再显示",
			"add known": "是否要将“{0}”添加到 .gitignore?",
			"yes": "是",
			"sync changes": "同步更改",
			"pull n": "从 {1}/{2} 拉取 {0} 个提交",
			"push n": "将 {0} 个提交推送到 {1}/{2}",
			"pull push n": "在 {2}/{3} 之间拉取 {0} 个提交并推送 {1} 个提交",
			"commitMessageWithHeadLabel": "消息({0} 在“{1}”提交)",
			"commitMessage": "消息({0} 待提交)"
		},
		"dist/main": {
			"looking": "正在查找 Git: {0}",
			"using git": "将使用位于 {1} 的 Git {0}",
			"downloadgit": "下载 Git",
			"neverShowAgain": "不再显示",
			"notfound": "未找到 Git。请安装 Git，或在 \"git.path\" 设置中配置。",
			"updateGit": "更新 GIT",
			"git20": "似乎已安装 GIT {0}。Code 非常适合 GIT >= 2",
			"git2526": "安装的 Git {0} 存在已知问题。要使 Git 功能正常工作，请至少将 Git 更新到 2.27 版本。"
		},
		"dist/remoteSource": {
			"type to search": "存储库名称(键入内容进行搜索)",
			"type to filter": "存储库名称",
			"none found": "未找到远程存储库。",
			"error": "$(error) 错误: {0}",
			"provide url": "提供存储库 URL",
			"provide url or pick": "提供存储库 URL 或选择存储库源。",
			"url": "URL",
			"pick url": "选择要从中进行克隆的 URL。",
			"branch name": "分支名称"
		},
		"dist/timelineProvider": {
			"git.timeline.source": "Git 历史记录",
			"git.timeline.you": "你",
			"git.timeline.stagedChanges": "暂存的更改",
			"git.timeline.detail": "{0}  — {1}\r\n{2}\r\n\r\n{3}",
			"git.index": "索引",
			"git.timeline.uncommitedChanges": "未提交的更改",
			"git.workingTree": "工作树"
		},
		"dist/model": {
			"not supported": "\"git.scanRepositories\" 设置中不支持绝对路径。",
			"too many submodules": "“{0}”存储库中的 {1} 个子模块将不会自动打开。您仍可以通过打开其中的文件来单独打开每个子模块。",
			"no repositories": "没有可用存储库",
			"pick repo": "选择存储库"
		},
		"dist/autofetch": {
			"yes": "是",
			"no": "否",
			"not now": "稍后询问",
			"suggest auto fetch": "您希望 Code [定期运行 \"git fetch\"]({0}) 吗?"
		},
		"dist/statusbar": {
			"rebasing": "正在变基",
			"checkout": "签出分支/标记...",
			"publish to": "发布到 {0}",
			"publish to...": "发布到...",
			"publish changes": "发布更改",
			"syncing changes": "正在同步更改..."
		},
		"dist/commands": {
			"tag at": "{0} 处的标记",
			"remote branch at": "{0} 处的远程分支",
			"create branch": "正在创建新分支...",
			"create branch from": "从...创建分支",
			"checkout detached": "签出已分离…",
			"add remote": "添加一个新远程...",
			"current": "当前",
			"select log level": "选择日志级别",
			"changed": "日志级别更改为: {0}",
			"clonefrom": "从 {0} 克隆",
			"repourl": "存储库 URL",
			"selectFolder": "选择存储库位置",
			"cloning": "正在克隆 Git 存储库“{0}”...",
			"proposeopen": "是否要打开已克隆存储库?",
			"openrepo": "打开",
			"openreponew": "在新窗口中打开",
			"add": "添加到工作区",
			"proposeopen2": "您是希望打开克隆的存储库，还是将其添加到当前工作区?",
			"init": "选择用于初始化 Git 储存库的工作区文件夹",
			"choose": "选择文件夹...",
			"init repo": "初始化存储库",
			"create repo": "初始化存储库",
			"are you sure": "将在“{0}”中创建 Git 存储库。确定要继续吗？",
			"proposeopen init": "是否打开初始化的存储库?",
			"proposeopen2 init": "您是希望打开初始化的存储库，还是将其添加到当前工作区?",
			"open repo": "打开存储库",
			"HEAD not available": "“{0}”的 HEAD 版本不可用。",
			"confirm stage files with merge conflicts": "确定要暂存含有合并冲突的 {0} 个文件吗?",
			"confirm stage file with merge conflicts": "确定要暂存含有合并冲突的 {0} 吗?",
			"yes": "是",
			"keep ours": "保留“我们”的版本",
			"delete": "删除文件",
			"deleted by them": "文件“{0}”已被他们删除且已经过我们修改。\r\n\r\n你想要执行什么操作?",
			"keep theirs": "保留“他们”的版本",
			"deleted by us": "文件“{0}”已被我们删除且已经过他们修改。\r\n\r\n你想要执行什么操作?",
			"discard": "放弃更改",
			"confirm delete": "确定要删除 {0} 吗?\r\n此操作不可撤消!\r\n如果继续操作，此文件将永久丢失。",
			"delete file": "删除文件",
			"restore file": "恢复文件",
			"confirm restore": "是否确实要还原 {0}?",
			"confirm discard": "确定要放弃 {0} 中更改吗?",
			"restore files": "恢复文件",
			"confirm restore multiple": "是否确定要还原 {0} 个文件?",
			"confirm discard multiple": "是否确实要放弃 {0} 文件中的更改?",
			"warn untracked": "这将删除 {0} 个未跟踪的文件!\r\n此操作不可撤消!\r\n这些文件将永久丢失。",
			"there are untracked files single": "若放弃下面未跟踪的文件，其将被从硬盘上删除: {0}。",
			"there are untracked files": "若放弃 {0} 个未跟踪的文件，其将被从硬盘上删除。",
			"confirm discard all 2": "{0}\r\n\r\n此操作不可撤消，你当前的工作集将永久丢失。",
			"yes discard tracked": "放弃 1 个已跟踪的文件",
			"yes discard tracked multiple": "放弃 {0} 个已跟踪的文件",
			"discardAll": "放弃所有 {0} 个文件",
			"confirm discard all single": "确定要放弃 {0} 中更改吗?",
			"confirm discard all": "确定要放弃在 {0} 个文件中所作的全部更改吗?\r\n此操作不可撤消!\r\n如果继续操作，你当前的工作集将永久丢失。",
			"discardAll multiple": "放弃 1 个文件",
			"confirm delete multiple": "确定要删除 {0} 个文件吗?\r\n此操作不可撤消!\r\n如果继续操作，这些文件将永久丢失。",
			"delete files": "删除文件",
			"unsaved files single": "以下文件具有未保存的更改；如果继续，则提交时不会包含这些更改: {0}。\r\n\r\n要在提交之前保存吗?",
			"unsaved files": "有 {0} 个文件尚未保存。\r\n\r\n要在提交之前保存吗?",
			"save and commit": "全部保存并提交",
			"commit": "提交暂存更改",
			"no staged changes": "没有可提交的暂存更改。\r\n\r\n是否要暂存所有更改并直接提交?",
			"always": "总是",
			"never": "从不",
			"commit anyway": "创建空提交",
			"no changes": "没有要提交的更改。",
			"no verify commit not allowed": "不允许在未验证的情况下提交，请使用 \"git.allowNoVerifyCommit\" 设置启用这些提交。",
			"confirm no verify commit": "你即将在未验证的情况下提交更改，这会跳过 pre-commit 挂钩，可能导致不理想的结果。\r\n\r\n确定要继续吗?",
			"ok": "确定",
			"never ask again": "确定，且不再询问",
			"commitMessageWithHeadLabel2": "消息(在\"{0}\"上提交)",
			"commit message": "提交消息",
			"provide commit message": "请提供提交消息",
			"confirm emtpy commit": "是否确定要创建空提交?",
			"yes never again": "确定，且不再显示",
			"no more": "无法撤消，因为 HEAD 不指向任何提交。",
			"undo commit": "撤消合并提交",
			"merge commit": "最后一个提交是合并提交。是否确实要撤消它？",
			"select a ref to checkout detached": "选择要在分离模式下签出的引用",
			"select a ref to checkout": "选择要签出的 ref",
			"force": "强制签出",
			"stashcheckout": "储藏并签出",
			"local changes": "签出会覆盖本地更改。",
			"branch name": "分支名称",
			"provide branch name": "请提供新的分支名称",
			"branch name format invalid": "分支名称必须匹配正则表达式: {0}",
			"select a ref to create a new branch from": "选择一个 ref 创建 \"{0}\" 分支",
			"select branch to delete": "选择要删除的分支",
			"confirm force delete branch": "“{0}”分支未被完全合并。是否仍要删除？",
			"delete branch": "删除分支",
			"invalid branch name": "分支名称无效",
			"branch already exists": "已存在名为“{0}”的分支",
			"select a branch to merge from": "选择要从其合并的分支",
			"select a branch to rebase onto": "选择要变基到的分支",
			"tag name": "标记名称",
			"provide tag name": "已成功带标记进行推送。",
			"tag message": "消息",
			"provide tag message": "请提供消息以对标记进行注释",
			"no tags": "此存储库没有标记。",
			"select a tag to delete": "选择要删除的标记",
			"no remotes to fetch": "此存储库未配置可以从中抓取的远程存储库。",
			"no remotes to pull": "存储库未配置任何从其中进行拉取的远程存储库。",
			"pick remote pull repo": "选择要从其拉取分支的远程位置",
			"pick branch pull": "选择拉取的来源分支",
			"addremote": "添加远程存储库",
			"no remotes to push": "存储库未配置任何要推送到的远程存储库。",
			"force push not allowed": "不允许强制推送，请启用 \"git. allowForcePush\" 设置。",
			"confirm force push": "即将强制推送更改，此操作可能具有破坏性并可能在无意中覆盖其他人的更改。\r\n\r\n确定要继续吗?",
			"nobranch": "请签出一个分支以推送到远程。",
			"confirm publish branch": "分支“{0}”没有上游分支。您要发布此分支吗?",
			"pick remote": "选取要将分支“{0}”发布到的远程:",
			"commit hash": "提交哈希",
			"provide commit hash": "请提供提交哈希",
			"addfrom": "从 {0} 添加远程存储库",
			"addFrom": "从 URL 添加远程存储库",
			"remote name": "远程存储库名称",
			"provide remote name": "请提供远程存储库名称",
			"remote name format invalid": "远程仓库名称格式无效",
			"remote already exists": "远程存储库“{0}”已存在。",
			"no remotes added": "您的存储库中没有远程存储库。",
			"remove remote": "选择要删除的远程库",
			"sync is unpredictable": "此操作会将提交项推送到“{0}/{1}”并从中拉取提交项。",
			"never again": "确定，且不再显示",
			"no remotes to publish": "存储库未配置任何要发布到的远程存储库。",
			"publish to": "发布到 {0}",
			"pick provider": "选择一个提供程序以将分支“{0}”发布到:",
			"no changes stash": "没有要储藏的更改。",
			"unsaved stash files single": "以下文件具有未保存的更改；如果继续，则储藏时不会包含这些更改: {0}。\r\n\r\n要在储藏之前保存吗?",
			"unsaved stash files": "有 {0} 个文件尚未保存。\r\n\r\n要在储藏之前保存吗?",
			"save and stash": "全部保存并储藏",
			"stash": "仍要储藏",
			"provide stash message": "提供储藏消息(可选)",
			"stash message": "储藏消息",
			"pick stash to pop": "选择要弹出的储藏",
			"no stashes": "此存储库中没有储藏。",
			"pick stash to apply": "选择要应用的储藏",
			"pick stash to drop": "选择要删除的储藏",
			"sure drop": "确定要删除储藏 {0} 吗?",
			"git.title.workingTree": "{0} (工作树)",
			"git.title.index": "{0} (索引)",
			"git.title.diffRefs": "{0} ({1}) ⟷ {0} ({2})",
			"git.title.ref": "{0} ({1})",
			"git.title.diff": "{0} ⟷ {1}",
			"no rebase": "没有正在进行的变基。",
			"open git log": "打开 GIT 日志",
			"show command output": "显示命令输出",
			"clean repo": "在签出前，请清理存储库工作树。",
			"cant push": "无法推送 refs 到远端。您可以试着运行“拉取”功能，整合您的更改。",
			"merge conflicts": "存在合并冲突。请在提交之前解决这些冲突。",
			"stash merge conflicts": "在应用储藏时存在合并冲突。",
			"auth failed specific": "未能对 git remote 进行身份验证:\r\n\r\n{0}",
			"auth failed": "未能对 git remote 进行身份验证。",
			"missing user info": "请确保已在 Git 中配置您的 \"user.name\" 和 \"user.email\"。",
			"learn more": "了解详细信息",
			"git error details": "Git: {0}",
			"git error": "Git 错误"
		},
		"dist/askpass-main": {
			"missOrInvalid": "凭据丢失或无效。"
		}
	}
}